
		; **** BCM file generated: Fri, Feb 05 2016, 11:21:28 AM ****

	.ver	200003

	org	p:

		chkdbg
	.ln		52
		pushc_i		$00000015
		pusha		FNAME
		pshrgpa
		pushc_i		$00000000
		sglob_func
		imstore_s
		chkdbg
	.ln		53
		pushc_i		$00000015
		pusha		FNAME
		pshrgpa
		pushc_i		$00000004
		pshgpa		_LC0
		tne_s
		pushc_i		$00000000
		dbl_func
		cnvt_di
		pushc_i		$00000005
		tne_i
		tor_i
		brcf		L1
		chkdbg
	.ln		55
		pushc_i		$00000000
		pushc_i		$00000004
		pshgpa		_LC0
		sglob_cmd
		chkdbg
	.ln		56
		pushc_i		$00000000
		pushc_d		$66666666 $40146666
		dbl_cmd
		chkdbg
	.ln		57
		pushc_i		$00000001
		pushc_i		$00000001
		int_cmd
		chkdbg
	.ln		58
		pushc_i		$00000002
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		59
		pushc_i		$00000000
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		60
		pushc_i		$00000003
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		61
		pushc_i		$00000006
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		62
		pushc_i		$00000004
		pushc_d		$00000000 $40380000
		dbl_cmd
		chkdbg
	.ln		63
		pushc_i		$00000004
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		64
		pushc_i		$00000007
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		65
		pushc_i		$00000009
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		66
		pushc_i		$0000000a
		pushc_i		$00000006
		int_cmd
		chkdbg
	.ln		67
		pusha		FN_AXES
		pushc_i		$0000000a
		int_func
		store_i
		chkdbg
	.ln		68
		pusha		FIAXIS
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit0
		pushv_i		FN_AXES
		cnvt_id
		pushc_d		$00000000 $3ff00000
		sub_d
		store_d
		pusha		_ForNextStep0
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L4
L2
		pushv_d		FIAXIS
		pushv_d		_ForNextLimit0
		pushv_d		_ForNextStep0
		tfor_d
		brcf		L3
L4
		chkdbg
	.ln		69
		pushc_i		$0000000b
		pushc_i		$00000000
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		70
		pushc_i		$0000000b
		pushc_i		$00000001
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		71
		pushc_i		$0000000b
		pushc_i		$00000002
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		pushc_i		$00000001
		int_cmd
		chkdbg
	.ln		72
		pushc_i		$0000000b
		pushc_i		$00000003
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		pushc_i		$00000000
		int_cmd
		pusha		FIAXIS
		pushv_d		FIAXIS
		pushv_d		_ForNextStep0
		add_d
		store_d
		bra		L2
L3
		chkdbg
	.ln		74
		pusha		FI
		pushc_i		$00000005
		store_i
		pusha		_ForNextLimit1
		pushc_i		$00000100
		store_i
		pusha		_ForNextStep1
		pushc_i		$00000001
		store_i
		bra		L7
L5
		pushv_i		FI
		pushv_i		_ForNextLimit1
		pushv_i		_ForNextStep1
		tfor_i
		brcf		L6
L7
		chkdbg
	.ln		75
		pushv_i		FI
		pushc_d		$00000000 $00000000
		dbl_cmd
		pusha		FI
		pushv_i		FI
		pushv_i		_ForNextStep1
		add_i
		store_i
		bra		L5
L6
L1
		chkdbg
	.ln		80
		cleartimer_emb
		chkdbg
	.ln		83
		pushc_i		$00000000
		waitmode_cmd
		chkdbg
	.ln		84
		pushc_d		$00000000 $00000000
		scurve_cmd
		chkdbg
	.ln		87
		pusha		FLAST_LEVEL
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		store_i
		chkdbg
	.ln		88
		pusha		FLAST_NT
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		90
L8
		pushc_d		$00000000 $3ff00000
		cnvt_di
		brcf		L9
		chkdbg
	.ln		91
		pusha		FDO_STEP
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		92
		pushc_i		$00000000
		int_func
		brcf		L11
		chkdbg
	.ln		94
		pusha		FLEVEL
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		store_i
		chkdbg
	.ln		96
		pushv_i		FLEVEL
		pushc_i		$00000001
		teq_i
		pushv_i		FLAST_LEVEL
		pushc_i		$00000000
		teq_i
		tand_i
		brcf		L13
		chkdbg
	.ln		97
		pusha		FDO_STEP
		pushc_i		$00000001
		store_i
L13
		chkdbg
	.ln		99
		pushv_i		FDO_STEP
		brcf		L15
		chkdbg
	.ln		99
		pushc_i		$00000004
		pushc_i		$00000004
		int_func
		pushc_i		$00000001
		add_i
		int_cmd
L15
		chkdbg
	.ln		100
		pusha		FLAST_LEVEL
		pushv_i		FLEVEL
		store_i
L11
		chkdbg
	.ln		102
		pushc_i		$00000008
		timer_emb
		cnvt_di
		int_cmd
		chkdbg
	.ln		103
		pushc_i		$00000003
		int_func
		brcf		L17
		chkdbg
	.ln		104
		pusha		FT
		pushc_i		$00000008
		int_func
		cnvt_id
		store_d
		chkdbg
	.ln		105
		pusha		FDT
		pushc_i		$00000004
		dbl_func
		cnvt_di
		store_i
		chkdbg
	.ln		106
		pushc_i		$00000009
		pushv_d		FT
		cnvt_di
		pushv_i		FDT
		div_i
		int_cmd
		chkdbg
	.ln		107
		pushc_i		$00000009
		int_func
		pushv_i		FLAST_NT
		tne_i
		brcf		L19
		chkdbg
	.ln		107
		pusha		FDO_STEP
		pushc_i		$00000001
		store_i
L19
		chkdbg
	.ln		108
		pusha		FLAST_NT
		pushc_i		$00000009
		int_func
		store_i
L17
		chkdbg
	.ln		112
		pushv_i		FDO_STEP
		brcf		L21
		chkdbg
	.ln		113
		pusha		FSTEP_COUNT
		pushc_i		$00000007
		int_func
		store_i
		chkdbg
	.ln		114
		pusha		FN_AXES
		pushc_i		$0000000a
		int_func
		store_i
		chkdbg
	.ln		115
		pusha		FIAXIS
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit2
		pushv_i		FN_AXES
		cnvt_id
		pushc_d		$00000000 $3ff00000
		sub_d
		store_d
		pusha		_ForNextStep2
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L24
L22
		pushv_d		FIAXIS
		pushv_d		_ForNextLimit2
		pushv_d		_ForNextStep2
		tfor_d
		brcf		L23
L24
		chkdbg
	.ln		116
		pusha		FI
		pushv_i		FSTEP_COUNT
		store_i
		chkdbg
	.ln		117
		pusha		FAXIS_ENABLED
		pushc_i		$0000000b
		pushc_i		$00000000
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		int_func
		store_i
		chkdbg
	.ln		118
		pushv_i		FAXIS_ENABLED
		brcf		L26
		chkdbg
	.ln		119
		pusha		FDIVISOR
		pushc_i		$0000000b
		pushc_i		$00000002
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		int_func
		store_i
		chkdbg
	.ln		120
		pushv_i		FDIVISOR
		pushc_i		$00000000
		teq_i
		brcf		L28
		chkdbg
	.ln		120
		pusha		FDIVISOR
		pushc_i		$00000001
		store_i
L28
		chkdbg
	.ln		121
		pushv_i		FI
		pushv_i		FDIVISOR
		div_i
		pushv_i		FDIVISOR
		mpy_i
		pushv_i		FI
		teq_i
		brcf		L30
		chkdbg
	.ln		122
		pusha		FI
		pushv_i		FI
		pushv_i		FDIVISOR
		div_i
		store_i
		chkdbg
	.ln		123
		pusha		FAXIS_NSTEPS
		pushc_i		$0000000b
		pushc_i		$00000003
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		int_func
		store_i
		chkdbg
	.ln		124
		pushv_i		FAXIS_NSTEPS
		pushc_i		$00000006
		int_func
		tgt_i
		brcf		L32
		chkdbg
	.ln		124
		pusha		FAXIS_NSTEPS
		pushc_i		$00000006
		int_func
		store_i
L32
		chkdbg
	.ln		125
		pushc_i		$00000001
		int_func
		brcf		L34
		chkdbg
	.ln		125
		pusha		FI
		pushv_i		FI
		pushv_i		FI
		pushv_i		FAXIS_NSTEPS
		div_i
		pushv_i		FAXIS_NSTEPS
		mpy_i
		sub_i
		store_i
L34
		chkdbg
	.ln		126
		pushv_i		FI
		pushv_i		FAXIS_NSTEPS
		tlt_i
		brcf		L36
		chkdbg
	.ln		127
		pusha		FPOS
		pushc_i		$00000005
		pushv_i		FI
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		dbl_func
		store_d
		chkdbg
	.ln		129
		pushv_d		FIAXIS
		cnvt_di
		axisfault_cmd
		pushc_i		$00000000
		teq_i
		pushv_d		FPOS
		cnvt_di
		pushv_d		FPOS
		cnvt_di
		teq_i
		tand_i
		brcf		L38
		chkdbg
	.ln		130
		pusha		FRELATIVE_MOVE
		pushc_i		$0000000b
		pushc_i		$00000001
		pushv_i		FN_AXES
		mpy_i
		add_i
		pushv_d		FIAXIS
		cnvt_di
		add_i
		int_func
		store_i
		chkdbg
	.ln		131
		pushv_i		FRELATIVE_MOVE
		tnot_i
		brcf		L40
		chkdbg
	.ln		132
		pushv_d		FIAXIS
		cnvt_di
		pushv_d		FPOS
		pushc_i		$00000001
		pushc_i		$00000001
		pushc_i		$00000002
		index_cmd
		bra		L39
L40
		chkdbg
	.ln		134
		pushv_d		FIAXIS
		cnvt_di
		pushv_d		FPOS
		pushc_i		$00000001
		pushc_i		$00000001
		pushc_i		$00000001
		index_cmd
L39
L38
L36
L30
L26
		pusha		FIAXIS
		pushv_d		FIAXIS
		pushv_d		_ForNextStep2
		add_d
		store_d
		bra		L22
L23
		chkdbg
	.ln		141
		pushc_i		$00000007
		pushc_i		$00000007
		int_func
		pushc_i		$00000001
		add_i
		int_cmd
L21
		bra		L8
L9

		chkdbg
	.ln		-1
		end

	.file		0,\\femto\c\all projects\aps\instrumentation\software\lauecollect\ensemble\triggeredmotion.ab
	.file		1,c:\program files (x86)\aerotech\ensemble\aerobasic\include\stringlibheader.abi


	org	y:

	.def	FTIMER_PERIOD
	.val	FTIMER_PERIOD
	.scl	2
	.type	$7
	.endef
FTIMER_PERIOD		bsc	2

	org	y:

	.def	FLAST_LEVEL
	.val	FLAST_LEVEL
	.scl	2
	.type	$4
	.endef
FLAST_LEVEL		bsc	1

	org	y:

	.def	FTRIGGED_STEP
	.val	FTRIGGED_STEP
	.scl	2
	.type	$4
	.endef
FTRIGGED_STEP		bsc	1

	org	y:

	.def	FI
	.val	FI
	.scl	2
	.type	$4
	.endef
FI		bsc	1

	org	y:

	.def	FLEVEL
	.val	FLEVEL
	.scl	2
	.type	$4
	.endef
FLEVEL		bsc	1

	org	y:

	.def	FT
	.val	FT
	.scl	2
	.type	$7
	.endef
FT		bsc	2

	org	y:

	.def	FDT
	.val	FDT
	.scl	2
	.type	$4
	.endef
FDT		bsc	1

	org	y:

	.def	FNT
	.val	FNT
	.scl	2
	.type	$7
	.endef
FNT		bsc	2

	org	y:

	.def	FLAST_NT
	.val	FLAST_NT
	.scl	2
	.type	$4
	.endef
FLAST_NT		bsc	1

	org	y:

	.def	FDO_STEP
	.val	FDO_STEP
	.scl	2
	.type	$4
	.endef
FDO_STEP		bsc	1

	org	y:

	.def	FBITS
	.val	FBITS
	.scl	2
	.type	$4
	.endef
FBITS		bsc	1

	org	y:

	.def	FENABLED
	.val	FENABLED
	.scl	2
	.type	$4
	.endef
FENABLED		bsc	1

	org	y:

	.def	FHOMED
	.val	FHOMED
	.scl	2
	.type	$4
	.endef
FHOMED		bsc	1

	org	y:

	.def	FN_AXES
	.val	FN_AXES
	.scl	2
	.type	$4
	.endef
FN_AXES		bsc	1

	org	y:

	.def	FPOS
	.val	FPOS
	.scl	2
	.type	$7
	.endef
FPOS		bsc	2

	org	y:

	.def	FRELATIVE_MOVE
	.val	FRELATIVE_MOVE
	.scl	2
	.type	$4
	.endef
FRELATIVE_MOVE		bsc	1

	org	y:

	.def	FSTEP_COUNT
	.val	FSTEP_COUNT
	.scl	2
	.type	$4
	.endef
FSTEP_COUNT		bsc	1

	org	y:

	.def	FAXIS_ENABLED
	.val	FAXIS_ENABLED
	.scl	2
	.type	$4
	.endef
FAXIS_ENABLED		bsc	1

	org	y:

	.def	FAXIS_NSTEPS
	.val	FAXIS_NSTEPS
	.scl	2
	.type	$4
	.endef
FAXIS_NSTEPS		bsc	1

	org	y:

	.def	FDIVISOR
	.val	FDIVISOR
	.scl	2
	.type	$4
	.endef
FDIVISOR		bsc	1

	org	y:

	.def	FNAME
	.val	FNAME
	.scl	2
	.dim	21
	.strt	0
	.size	21
	.type	$3c
	.endef
FNAME		bsc	21

	org	y:

	.def	FVERSION
	.val	FVERSION
	.scl	2
	.type	$7
	.endef
FVERSION		bsc	2

	org	y:

	.def	FIAXIS
	.val	FIAXIS
	.scl	2
	.type	$7
	.endef
FIAXIS		bsc	2

	org	y:
_LC0
	dc	$67697254, $65726567, $746f4d64, $006e6f69


	org	y:

	.def	_ForNextLimit0
	.val	_ForNextLimit0
	.scl	20
	.type	$7
	.endef
_ForNextLimit0		bsc	2

	org	y:

	.def	_ForNextStep0
	.val	_ForNextStep0
	.scl	20
	.type	$7
	.endef
_ForNextStep0		bsc	2

	org	y:

	.def	_ForNextLimit1
	.val	_ForNextLimit1
	.scl	20
	.type	$4
	.endef
_ForNextLimit1		bsc	1

	org	y:

	.def	_ForNextStep1
	.val	_ForNextStep1
	.scl	20
	.type	$4
	.endef
_ForNextStep1		bsc	1

	org	y:

	.def	_ForNextLimit2
	.val	_ForNextLimit2
	.scl	20
	.type	$7
	.endef
_ForNextLimit2		bsc	2

	org	y:

	.def	_ForNextStep2
	.val	_ForNextStep2
	.scl	20
	.type	$7
	.endef
_ForNextStep2		bsc	2

