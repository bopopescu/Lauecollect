
		; **** BCM file generated: Mon, Mar 04 2019, 10:13:44 AM ****

	.ver	200003

	org	p:

		chkdbg
	.ln		42
		pushc_i		$00000000
		pushc_i		$00000001
		int_cmd
		chkdbg
	.ln		43
		pushc_i		$00000001
		pushc_i		$00000001
		int_cmd
		chkdbg
	.ln		44
		pushc_i		$00000002
		pushc_i		$00000001
		int_cmd
		chkdbg
	.ln		47
		pusha		FN_TRIGGER
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		48
		pusha		FN_OUTLIER
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		49
		pusha		FN_PRINT
		pushc_d		$00000000 $40240000
		store_d
		chkdbg
	.ln		52
		abs_cmd
		chkdbg
	.ln		53
		pushc_i		$00000001
		waitmode_cmd
		chkdbg
	.ln		54
		pushc_i		$00000006
		pushc_i		$00000001
		enable_cmd
		chkdbg
	.ln		55
		pushc_i		$00000006
		pushc_i		$00000001
		home_cmd
		chkdbg
	.ln		56
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_OPEN
		pushv_i		FSLOPE
		cnvt_id
		pushv_d		FMSSHUT_STEP
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		57
		pushc_i		$00000006
		pushv_d		FMSSHUT_POS
		pushc_d		$00000000 $40c38800
		pushc_i		$00000002
		pushc_i		$00000001
		pushc_i		$00000002
		index_cmd
		chkdbg
	.ln		60
		pushc_i		$000003e8
		scopebuffer_cmd
		chkdbg
	.ln		61
		pushc_i		$fffffffc
		scopetrigperiod_cmd
		chkdbg
	.ln		64
		pushc_i		$00000000
		pushc_i		$00020004
		spline_cmd
		chkdbg
	.ln		65
		pushc_i		$00000001
		velocity_cmd
		chkdbg
	.ln		66
		halt_cmd
		chkdbg
	.ln		69
L2
		pushc_i		$00000000
		int_func
		pushc_i		$00000000
		tgt_i
		brcf		L3
		chkdbg
	.ln		70
		pusha		FN_LOOP
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		71
		pushc_i		$00000001
		startsync_cmd
		chkdbg
	.ln		72
		pusha		FVOLT0
		pushc_i		$00000006
		pushc_i		$00000000
		ain_cmd
		cnvt_fd
		store_d
		chkdbg
	.ln		73
		pusha		FVOLT1
		pushv_d		FVOLT0
		store_d
		chkdbg
	.ln		74
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000004
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		75
L4
		pushv_d		FVOLT1
		pushc_d		$9999999a $3fe19999
		tlt_d
		pushv_d		FVOLT1
		pushc_d		$cccccccc $4006cccc
		tgt_d
		tor_d
		cnvt_di
		brcf		L5
		chkdbg
	.ln		76
		sync_cmd
		chkdbg
	.ln		77
		pusha		FVOLT1
		pushc_i		$00000006
		pushc_i		$00000000
		ain_cmd
		cnvt_fd
		store_d
		chkdbg
	.ln		78
		pusha		FN_LOOP
		pushv_i		FN_LOOP
		pushc_i		$00000001
		add_i
		store_i
		bra		L4
L5
		chkdbg
	.ln		80
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000003
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		81
		halt_cmd
		chkdbg
	.ln		82
		pushc_i		$00000001
		int_func
		pushc_i		$00000001
		teq_i
		brcf		L7
		chkdbg
	.ln		84
		scopetrig_cmd
		chkdbg
	.ln		84
		pushc_i		$00000001
		pushc_i		$00000000
		int_cmd
L7
		chkdbg
	.ln		86
		sync_cmd
		chkdbg
	.ln		87
		sync_cmd
		chkdbg
	.ln		88
		sync_cmd
		chkdbg
	.ln		89
		pusha		FVOLT2
		pushc_i		$00000006
		pushc_i		$00000000
		ain_cmd
		cnvt_fd
		store_d
		chkdbg
	.ln		90
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000002
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		93
		pushv_d		FVOLT0
		pushc_d		$9999999a $3ff99999
		tlt_d
		pushv_d		FVOLT2
		pushc_d		$9999999a $3ff99999
		tlt_d
		tand_d
		cnvt_di
		brcf		L9
		chkdbg
	.ln		94
		pusha		FT_OFFSET
		pushc_d		$566cf41f $3fa6ae7d
		pushv_d		FVOLT1
		pushc_d		$00000000 $40080000
		pwr_d
		mpy_d
		pushc_d		$66666667 $3fc66666
		pushv_d		FVOLT1
		pushc_d		$00000000 $40000000
		pwr_d
		mpy_d
		sub_d
		pushc_d		$566cf41f $3fe4ae7d
		pushv_d		FVOLT1
		mpy_d
		add_d
		pushv_d		FT_SHIFT
		sub_d
		store_d
		chkdbg
	.ln		98
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_OPEN
		pushv_i		FSLOPE
		cnvt_id
		pushv_d		FMSSHUT_STEP
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		99
		pusha		FMIDPOINT
		pushv_d		FMSSHUT_OPEN
		store_d
		chkdbg
	.ln		100
		pusha		FTI
		pushc_d		$00000000 $40000000
		pushc_d		$00000000 $40280000
		pushv_d		FDT
		mpy_d
		pushc_d		$00000000 $401c0000
		pushv_d		FT_OFFSET
		add_d
		pushc_d		$00000000 $408f4000
		div_d
		sub_d
		mpy_d
		store_d
		chkdbg
	.ln		103
		pusha		FVMAX
		pushv_i		FSLOPE
		cnvt_id
		pushc_d		$00000000 $3ff80000
		mpy_d
		pushc_d		$00000000 $40000000
		pushv_d		FMSSHUT_STEP
		mpy_d
		mpy_d
		pushv_d		FTI
		pushc_d		$00000000 $408f4000
		mpy_d
		div_d
		store_d
		chkdbg
	.ln		104
		pusha		FT_DELTA
		pushc_d		$00000000 $40260000
		pushv_d		FT_OFFSET
		add_d
		pushc_d		$00000000 $40c77000
		pushv_d		FDT
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		106
		pusha		FN_DELAY
		pushc_i		$00000006
		store_i
		chkdbg
	.ln		107
		sync_cmd
		chkdbg
	.ln		108
		sync_cmd
		bra		L8
L9
		chkdbg
	.ln		109
		pushv_d		FVOLT0
		pushc_d		$9999999a $3ff99999
		tlt_d
		pushv_d		FVOLT2
		pushc_d		$9999999a $3ff99999
		tgt_d
		tand_d
		cnvt_di
		brcf		L10
		chkdbg
	.ln		110
		pusha		FT_OFFSET
		pushc_d		$0d844d02 $3fa4af4f
		pushv_d		FVOLT1
		pushc_d		$00000000 $40080000
		pwr_d
		mpy_d
		pushc_d		$9e59f2bb $3fc37707
		pushv_d		FVOLT1
		pushc_d		$00000000 $40000000
		pwr_d
		mpy_d
		sub_d
		pushc_d		$06cca2db $3fe36499
		pushv_d		FVOLT1
		mpy_d
		add_d
		pushv_d		FT_SHIFT
		sub_d
		store_d
		chkdbg
	.ln		114
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_OPEN
		store_d
		chkdbg
	.ln		115
		pusha		FMIDPOINT
		pushv_d		FMSSHUT_OPEN
		pushc_d		$00000000 $3fe00000
		pushv_i		FSLOPE
		cnvt_id
		mpy_d
		pushv_d		FMSSHUT_STEP
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		116
		pusha		FTI
		pushc_d		$00000000 $40000000
		pushc_d		$00000000 $40260000
		pushv_d		FDT
		mpy_d
		pushc_d		$00000000 $401c0000
		pushv_d		FT_OFFSET
		add_d
		pushc_d		$00000000 $408f4000
		div_d
		sub_d
		mpy_d
		store_d
		chkdbg
	.ln		119
		pusha		FVMAX
		pushv_i		FSLOPE
		cnvt_id
		pushc_d		$00000000 $3ff80000
		mpy_d
		pushv_d		FMSSHUT_STEP
		mpy_d
		pushv_d		FTI
		pushc_d		$00000000 $408f4000
		mpy_d
		div_d
		store_d
		chkdbg
	.ln		120
		pusha		FT_DELTA
		pushc_d		$00000000 $40240000
		pushv_d		FT_OFFSET
		add_d
		pushc_d		$00000000 $40c57c00
		pushv_d		FDT
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		122
		pusha		FN_DELAY
		pushc_i		$00000005
		store_i
		chkdbg
	.ln		123
		sync_cmd
		chkdbg
	.ln		124
		sync_cmd
		bra		L8
L10
		chkdbg
	.ln		126
		pusha		FT_OFFSET
		pushc_d		$fb549f95 $bfa63c74
		pushv_d		FVOLT1
		pushc_d		$00000000 $40080000
		pwr_d
		mpy_d
		pushc_d		$ea209aab $3fd1003e
		pushv_d		FVOLT1
		pushc_d		$00000000 $40000000
		pwr_d
		mpy_d
		add_d
		pushc_d		$9320d995 $3fee9c8c
		pushv_d		FVOLT1
		mpy_d
		sub_d
		pushc_d		$50c5eb30 $3fff344e
		add_d
		pushv_d		FT_SHIFT
		sub_d
		store_d
		chkdbg
	.ln		131
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_OPEN
		pushv_i		FSLOPE
		cnvt_id
		pushv_d		FMSSHUT_STEP
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		132
		pusha		FMIDPOINT
		pushv_d		FMSSHUT_OPEN
		pushc_d		$00000000 $3fe00000
		pushv_i		FSLOPE
		cnvt_id
		mpy_d
		pushv_d		FMSSHUT_STEP
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		133
		pusha		FTI
		pushc_d		$00000000 $40000000
		pushc_d		$00000000 $402a0000
		pushv_d		FDT
		mpy_d
		pushc_d		$00000000 $40220000
		pushv_d		FT_OFFSET
		add_d
		pushc_d		$00000000 $408f4000
		div_d
		sub_d
		mpy_d
		store_d
		chkdbg
	.ln		136
		pusha		FVMAX
		pushv_i		FSLOPE
		cnvt_id
		pushc_d		$00000000 $3ff80000
		mpy_d
		pushv_d		FMSSHUT_STEP
		mpy_d
		pushv_d		FTI
		pushc_d		$00000000 $408f4000
		mpy_d
		div_d
		store_d
		chkdbg
	.ln		137
		pusha		FT_DELTA
		pushc_d		$00000000 $40280000
		pushv_d		FT_OFFSET
		add_d
		pushc_d		$00000000 $40c96400
		pushv_d		FDT
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		139
		pusha		FN_DELAY
		pushc_i		$00000005
		store_i
		chkdbg
	.ln		140
		sync_cmd
		chkdbg
	.ln		141
		sync_cmd
		chkdbg
	.ln		142
		sync_cmd
		chkdbg
	.ln		143
		sync_cmd
L8
		chkdbg
	.ln		147
		pushc_i		$00000006
		pushv_d		FMSSHUT_POS
		pushc_d		$00000000 $00000000
		pushv_d		FTI
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000001
		pushc_i		$00030101
		spline_cmd
		chkdbg
	.ln		148
		start_cmd
		chkdbg
	.ln		149
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		152
		pusha		FJ
		pushc_d		$00000000 $3ff00000
		store_d
		pusha		_ForNextLimit0
		pushv_i		FN_DELAY
		cnvt_id
		store_d
		pusha		_ForNextStep0
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L13
L11
		pushv_d		FJ
		pushv_d		_ForNextLimit0
		pushv_d		_ForNextStep0
		tfor_d
		brcf		L12
L13
		chkdbg
	.ln		152
		sync_cmd
		pusha		FJ
		pushv_d		FJ
		pushv_d		_ForNextStep0
		add_d
		store_d
		bra		L11
L12
		chkdbg
	.ln		153
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		154
		pusha		FPOS_ERROR
		pushc_i		$00000006
		pcmd_cmd
		pushv_d		FMIDPOINT
		sub_d
		pushv_d		FVMAX
		pushv_d		FT_DELTA
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		155
		pusha		FSLOPE
		pushc_i		$ffffffff
		pushv_i		FSLOPE
		mpy_i
		store_i
		chkdbg
	.ln		157
		pushc_i		$00000002
		int_func
		pushc_i		$00000001
		teq_i
		brcf		L15
		chkdbg
	.ln		158
		pusha		FV1_MIN
		pushc_d		$00000000 $40080000
		store_d
		chkdbg
	.ln		159
		pusha		FV1_MAX
		pushc_d		$00000000 $00000000
		store_d
		chkdbg
	.ln		160
		pusha		FN_LOOP_MIN
		pushc_d		$00000000 $40590000
		store_d
		chkdbg
	.ln		161
		pusha		FN_TRIGGER
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		162
		pusha		FN_OUTLIER
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		163
		pushc_i		$00000002
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		164
		dclspc		$00000000
		callp		FPRINT_LOG
		bra		L14
L15
		chkdbg
	.ln		166
		pushv_i		FN_LOOP
		pushv_d		FN_LOOP_MIN
		cnvt_di
		tlt_i
		brcf		L17
		chkdbg
	.ln		167
		pusha		FN_LOOP_MIN
		pushv_i		FN_LOOP
		cnvt_id
		store_d
L17
		chkdbg
	.ln		169
		pushv_d		FVOLT1
		pushv_d		FV1_MAX
		tgt_d
		cnvt_di
		brcf		L19
		chkdbg
	.ln		170
		pusha		FV1_MAX
		pushv_d		FVOLT1
		store_d
L19
		chkdbg
	.ln		172
		pushv_d		FVOLT1
		pushv_d		FV1_MIN
		tlt_d
		cnvt_di
		brcf		L21
		chkdbg
	.ln		173
		pusha		FV1_MIN
		pushv_d		FVOLT1
		store_d
L21
		chkdbg
	.ln		175
		pushv_d		FPOS_ERROR
		pushc_d		$00000000 $bfe00000
		tlt_d
		pushv_d		FPOS_ERROR
		pushc_d		$00000000 $3fe00000
		tgt_d
		tor_d
		cnvt_di
		brcf		L23
		chkdbg
	.ln		176
		pusha		FN_OUTLIER
		pushv_i		FN_OUTLIER
		pushc_i		$00000001
		add_i
		store_i
		chkdbg
	.ln		177
		dclspc		$00000000
		callp		FPRINT_LOG
		bra		L22
L23
		chkdbg
	.ln		178
		pushv_i		FN_TRIGGER
		pushv_d		FN_PRINT
		cnvt_di
		tlt_i
		brcf		L24
		chkdbg
	.ln		179
		dclspc		$00000000
		callp		FPRINT_LOG
L24
L22
L14
		chkdbg
	.ln		183
		pusha		FN_TRIGGER
		pushv_i		FN_TRIGGER
		pushc_i		$00000001
		add_i
		store_i
		bra		L2
L3

		chkdbg
	.ln		-1
		end

	.file		0,\\femto\c\all projects\aps\instrumentation\software\lauecollect\ensemble\msshut_pp.ab
	.file		1,\\femto\c\all projects\aps\instrumentation\software\lauecollect\ensemble\msshut_parameters.abi
	.def	FPRINT_LOG
	.val	FPRINT_LOG
	.scl	2
	.type	$21
	.endef
FPRINT_LOG
	.bf		188
	.bb		188
		rcrdfp
		chkdbg
	.ln		188
		pushc_i		$00000019
		pusha		FPRINTSTRING
		pshrgpa
		pushc_i		$00000009
		pshgpa		_LC0
		pushv_i		FN_OUTLIER
		pushc_i		$00000000
		pushv_i		FN_TRIGGER
		pushc_i		$00000000
		pushv_i		FN_LOOP
		pushc_i		$00000000
		pushv_d		FVOLT0
		pushc_i		$00000002
		pushv_d		FVOLT1
		pushc_i		$00000002
		pushv_d		FVOLT2
		pushc_i		$00000002
		pushv_d		FT_OFFSET
		pushc_i		$00000002
		pushv_d		FPOS_ERROR
		pushc_i		$00000002
		pushc_i		$00000008
		format_emb
		chkdbg
	.ln		197
		pushv_i		FN_TRIGGER
		pushc_i		$00000000
		teq_i
		brcf		L1
		chkdbg
	.ln		198
		pushc_i		$00000019
		pusha		FPRINTSTRING
		pshrgpa
		pushc_i		$00000012
		pshgpa		_LC1
		imstore_s
		chkdbg
	.ln		199
		pushc_i		$00000019
		pusha		FPRINTSTRING
		pshrgpa
		print_cmd
		bra		L0
L1
		chkdbg
	.ln		201
		pushc_i		$00000019
		pusha		FPRINTSTRING
		pshrgpa
		print_cmd
L0
	.eb		203
	.ef		203
		rtn		$00000000		$00000000
	.def	*
	.val	0
	.scl	-1
	.type	$0
	.endef


	org	y:

	.def	FDT
	.val	FDT
	.scl	2
	.type	$7
	.endef
FDT
	dc	$0d5ff2ab, $3f50af00

	org	y:

	.def	FMSSHUT_OPEN
	.val	FMSSHUT_OPEN
	.scl	2
	.type	$7
	.endef
FMSSHUT_OPEN
	dc	$33333333, $40343333

	org	y:

	.def	FMSSHUT_STEP
	.val	FMSSHUT_STEP
	.scl	2
	.type	$7
	.endef
FMSSHUT_STEP
	dc	$cccccccd, $4024cccc

	org	y:

	.def	FT_SHIFT
	.val	FT_SHIFT
	.scl	2
	.type	$7
	.endef
FT_SHIFT
	dc	$00000000, $bfd00000

	org	y:

	.def	FSLOPE
	.val	FSLOPE
	.scl	2
	.type	$4
	.endef
FSLOPE
	dc	$00000001

	org	y:

	.def	FPRINTSTRING
	.val	FPRINTSTRING
	.scl	2
	.dim	25
	.strt	0
	.size	25
	.type	$3c
	.endef
FPRINTSTRING		bsc	25

	org	y:

	.def	FN_TRIGGER
	.val	FN_TRIGGER
	.scl	2
	.type	$4
	.endef
FN_TRIGGER		bsc	1

	org	y:

	.def	FN_DELAY
	.val	FN_DELAY
	.scl	2
	.type	$4
	.endef
FN_DELAY		bsc	1

	org	y:

	.def	FN_OUTLIER
	.val	FN_OUTLIER
	.scl	2
	.type	$4
	.endef
FN_OUTLIER		bsc	1

	org	y:

	.def	FN_LOOP
	.val	FN_LOOP
	.scl	2
	.type	$4
	.endef
FN_LOOP		bsc	1

	org	y:

	.def	FPOS_ERROR
	.val	FPOS_ERROR
	.scl	2
	.type	$7
	.endef
FPOS_ERROR		bsc	2

	org	y:

	.def	FVOLT0
	.val	FVOLT0
	.scl	2
	.type	$7
	.endef
FVOLT0		bsc	2

	org	y:

	.def	FVOLT1
	.val	FVOLT1
	.scl	2
	.type	$7
	.endef
FVOLT1		bsc	2

	org	y:

	.def	FVOLT2
	.val	FVOLT2
	.scl	2
	.type	$7
	.endef
FVOLT2		bsc	2

	org	y:

	.def	FT_OFFSET
	.val	FT_OFFSET
	.scl	2
	.type	$7
	.endef
FT_OFFSET		bsc	2

	org	y:

	.def	FN_PRINT
	.val	FN_PRINT
	.scl	2
	.type	$7
	.endef
FN_PRINT		bsc	2

	org	y:

	.def	FMSSHUT_POS
	.val	FMSSHUT_POS
	.scl	2
	.type	$7
	.endef
FMSSHUT_POS		bsc	2

	org	y:

	.def	FMIDPOINT
	.val	FMIDPOINT
	.scl	2
	.type	$7
	.endef
FMIDPOINT		bsc	2

	org	y:

	.def	FTI
	.val	FTI
	.scl	2
	.type	$7
	.endef
FTI		bsc	2

	org	y:

	.def	FVMAX
	.val	FVMAX
	.scl	2
	.type	$7
	.endef
FVMAX		bsc	2

	org	y:

	.def	FT_DELTA
	.val	FT_DELTA
	.scl	2
	.type	$7
	.endef
FT_DELTA		bsc	2

	org	y:

	.def	FJ
	.val	FJ
	.scl	2
	.type	$7
	.endef
FJ		bsc	2

	org	y:

	.def	FV1_MIN
	.val	FV1_MIN
	.scl	2
	.type	$7
	.endef
FV1_MIN		bsc	2

	org	y:

	.def	FV1_MAX
	.val	FV1_MAX
	.scl	2
	.type	$7
	.endef
FV1_MAX		bsc	2

	org	y:

	.def	FN_LOOP_MIN
	.val	FN_LOOP_MIN
	.scl	2
	.type	$7
	.endef
FN_LOOP_MIN		bsc	2

	org	y:
_LC0
	dc	$252c6425, $64252c64, $332e252c, $2e252c66, $252c6633, $2c66332e, $66332e25, $332e252c, $00000d66

	org	y:
_LC1
	dc	$756f5f4e, $65696c74, $4e202c72, $6972745f, $72656767, $5f4e202c, $706f6f6c, $6f56202c, $2c30746c, $6c6f5620
	dc	$202c3174, $746c6f56, $54202c32, $66666f5f, $2c746573, $736f5020, $7272655f, $000d726f


	org	y:

	.def	_ForNextLimit0
	.val	_ForNextLimit0
	.scl	20
	.type	$7
	.endef
_ForNextLimit0		bsc	2

	org	y:

	.def	_ForNextStep0
	.val	_ForNextStep0
	.scl	20
	.type	$7
	.endef
_ForNextStep0		bsc	2

