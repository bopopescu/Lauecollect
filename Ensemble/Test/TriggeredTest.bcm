
		; **** BCM file generated: Mon, Feb 25 2013, 09:37:08 PM ****

	.ver	200003

	org	p:

		chkdbg
	.ln		25
		pusha		FSTEPSIZE
		pushc_d		$00000000 $407f4000
		store_d
		chkdbg
	.ln		26
		pusha		FSTART_POS
		pushc_d		$00000000 $c0c7ed00
		store_d
		chkdbg
	.ln		27
		pusha		FEND_POS
		pushc_d		$00000000 $40c7ed00
		store_d
		chkdbg
	.ln		28
		pusha		FTRIGGER_ENABLED
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		29
		pusha		FTIMER_ENABLED
		pushc_i		$00000001
		store_i
		chkdbg
	.ln		30
		pusha		FTIMER_PERIOD
		pushc_d		$00000000 $40380000
		store_d
		chkdbg
	.ln		31
		pusha		FSPEED
		pushc_d		$00000000 $41086a00
		store_d
		chkdbg
	.ln		32
		pusha		FSTEP_ACCELERATION
		pushc_d		$00000000 $416ab3f0
		store_d
		chkdbg
	.ln		33
		pusha		FACCELERATION
		pushv_d		FSTEP_ACCELERATION
		store_d
		chkdbg
	.ln		34
		pusha		FTRIGGER_COUNT
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		35
		pusha		FSTEP_COUNT
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		36
		pusha		FTRIGGERED_STEP
		pushc_d		$00000000 $00000000
		store_d
		chkdbg
	.ln		43
		pushc_i		$00000000
		waitmode_cmd
		chkdbg
	.ln		44
		pushc_i		$00000000
		pushc_i		$00000000
		pushc_i		$00000001
		ramp_cmd
		chkdbg
	.ln		46
		pushc_i		$00000002
		pushc_i		$00000001
		faultack_cmd
		chkdbg
	.ln		49
		pusha		FLAST_LEVEL
		pushc_i		$00000002
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		store_i
		chkdbg
	.ln		50
L0
		pushc_d		$00000000 $3ff00000
		cnvt_di
		brcf		L1
		chkdbg
	.ln		51
		pusha		FDO_STEP
		pushc_d		$00000000 $00000000
		store_d
		chkdbg
	.ln		52
		pushv_i		FTRIGGER_ENABLED
		brcf		L3
		chkdbg
	.ln		54
		pusha		FLEVEL
		pushc_i		$00000002
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		store_i
		chkdbg
	.ln		55
		pushv_i		FLEVEL
		pushc_i		$00000001
		teq_i
		pushv_i		FLAST_LEVEL
		pushc_i		$00000000
		teq_i
		tand_i
		brcf		L5
		chkdbg
	.ln		55
		pusha		FDO_STEP
		pushc_d		$00000000 $3ff00000
		store_d
L5
		chkdbg
	.ln		56
		pushv_d		FDO_STEP
		cnvt_di
		brcf		L7
		chkdbg
	.ln		56
		pusha		FTRIGGER_COUNT
		pushv_i		FTRIGGER_COUNT
		pushc_i		$00000001
		add_i
		store_i
L7
		chkdbg
	.ln		57
		pusha		FLAST_LEVEL
		pushv_i		FLEVEL
		store_i
L3
		chkdbg
	.ln		59
		pushv_i		FTIMER_ENABLED
		brcf		L9
		chkdbg
	.ln		60
		pusha		FT
		timer_emb
		store_d
		chkdbg
	.ln		61
		pushv_d		FT
		pushv_d		FTIMER_PERIOD
		tge_d
		cnvt_di
		brcf		L11
		chkdbg
	.ln		61
		pusha		FDO_STEP
		pushc_d		$00000000 $3ff00000
		store_d
L11
		chkdbg
	.ln		62
		pushv_d		FDO_STEP
		cnvt_di
		brcf		L13
		chkdbg
	.ln		62
		cleartimer_emb
L13
L9
		chkdbg
	.ln		66
		pushv_d		FDO_STEP
		cnvt_di
		brcf		L15
		chkdbg
	.ln		67
		pusha		FBITS
		pushc_i		$00000002
		axisstatus_cmd
		store_i
		chkdbg
	.ln		68
		pusha		FMOVING
		pushv_i		FBITS
		pushc_i		$00000003
		tbsr_i
		pushc_i		$00000001
		tband_i
		store_i
		chkdbg
	.ln		71
		pushv_i		FMOVING
		tnot_i
		pushv_d		FTRIGGERED_STEP
		cnvt_di
		tor_i
		brcf		L17
		chkdbg
	.ln		72
		pusha		FTRIGGER_COUNT
		pushv_i		FTRIGGER_COUNT
		pushc_i		$00000001
		add_i
		store_i
		chkdbg
	.ln		73
		pusha		FCURRENT_POS
		pushc_i		$00000002
		pcmd_cmd
		store_d
		chkdbg
	.ln		74
		pushv_d		FEND_POS
		pushv_d		FSTART_POS
		tgt_d
		cnvt_di
		brcf		L19
		chkdbg
	.ln		74
		pusha		FHP
		pushv_d		FEND_POS
		store_d
		bra		L18
L19
		chkdbg
	.ln		74
		pusha		FHP
		pushv_d		FSTART_POS
		store_d
L18
		chkdbg
	.ln		75
		pushv_d		FEND_POS
		pushv_d		FSTART_POS
		tgt_d
		cnvt_di
		brcf		L21
		chkdbg
	.ln		75
		pusha		FLP
		pushv_d		FSTART_POS
		store_d
		bra		L20
L21
		chkdbg
	.ln		75
		pusha		FLP
		pushv_d		FEND_POS
		store_d
L20
		chkdbg
	.ln		76
		pusha		FHL
		pushv_i		FBITS
		pushc_i		$00000016
		tbsr_i
		pushc_i		$00000001
		tband_i
		store_i
		chkdbg
	.ln		77
		pusha		FLL
		pushv_i		FBITS
		pushc_i		$00000017
		tbsr_i
		pushc_i		$00000001
		tband_i
		store_i
		chkdbg
	.ln		79
		pushv_i		FMOVING
		tnot_i
		brcf		L23
		chkdbg
	.ln		80
		pushc_i		$00000002
		pushc_i		$00000001
		faultack_cmd
L23
		chkdbg
	.ln		82
		pushc_i		$00000002
		pushc_i		$00000001
		enable_cmd
		chkdbg
	.ln		84
		pushv_d		FSTEPSIZE
		pushc_d		$00000000 $00000000
		tgt_d
		pushv_d		FCURRENT_POS
		pushv_d		FSTEPSIZE
		add_d
		pushv_d		FHP
		pushc_d		$00000000 $3ff00000
		add_d
		tgt_d
		tand_d
		pushv_i		FHL
		cnvt_id
		tor_d
		cnvt_di
		brcf		L25
		chkdbg
	.ln		85
		pushc_i		$00000000
		pushc_i		$00000002
		pushv_d		FACCELERATION
		pushc_i		$00000001
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000000
		ramp_cmd
		chkdbg
	.ln		86
		pushc_i		$00000002
		pushv_d		FLP
		pushv_d		FSPEED
		pushc_i		$00000002
		pushc_i		$00000001
		pushc_i		$00000002
		index_cmd
		chkdbg
	.ln		87
		pusha		FTRIGGERED_STEP
		pushc_d		$00000000 $00000000
		store_d
		chkdbg
	.ln		88
		pusha		FSTEP_COUNT
		pushv_i		FSTEP_COUNT
		pushc_i		$00000001
		add_i
		store_i
		bra		L24
L25
		chkdbg
	.ln		89
		pushv_d		FSTEPSIZE
		pushc_d		$00000000 $00000000
		tlt_d
		pushv_d		FCURRENT_POS
		pushv_d		FSTEPSIZE
		add_d
		pushv_d		FLP
		pushc_d		$00000000 $3ff00000
		sub_d
		tlt_d
		tand_d
		pushv_i		FLL
		cnvt_id
		tor_d
		cnvt_di
		brcf		L26
		chkdbg
	.ln		90
		pushc_i		$00000000
		pushc_i		$00000002
		pushv_d		FACCELERATION
		pushc_i		$00000001
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000000
		ramp_cmd
		chkdbg
	.ln		91
		pushc_i		$00000002
		pushv_d		FHP
		pushv_d		FSPEED
		pushc_i		$00000002
		pushc_i		$00000001
		pushc_i		$00000002
		index_cmd
		chkdbg
	.ln		92
		pusha		FTRIGGERED_STEP
		pushc_d		$00000000 $00000000
		store_d
		chkdbg
	.ln		93
		pusha		FSTEP_COUNT
		pushv_i		FSTEP_COUNT
		pushc_i		$00000001
		add_i
		store_i
		bra		L24
L26
		chkdbg
	.ln		95
		pushc_i		$00000000
		pushc_i		$00000002
		pushv_d		FSTEP_ACCELERATION
		pushc_i		$00000001
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000000
		ramp_cmd
		chkdbg
	.ln		96
		pushc_i		$00000002
		pushv_d		FCURRENT_POS
		pushv_d		FSTEPSIZE
		add_d
		pushv_d		FSPEED
		pushc_i		$00000002
		pushc_i		$00000001
		pushc_i		$00000002
		index_cmd
		chkdbg
	.ln		97
		pusha		FTRIGGERED_STEP
		pushc_d		$00000000 $3ff00000
		store_d
		chkdbg
	.ln		98
		pusha		FSTEP_COUNT
		pushv_i		FSTEP_COUNT
		pushc_i		$00000001
		add_i
		store_i
L24
L17
L15
		bra		L0
L1

		chkdbg
	.ln		-1
		end

	.file		0,\\.psf\host\volumes\c\all projects\aps\instrumentation\experimental hutch\high speed diffractometer\software\triggeredtest.ab


	org	y:

	.def	FVERSION
	.val	FVERSION
	.scl	2
	.dim	1
	.strt	0
	.size	1
	.type	$3c
	.endef
FVERSION
	dc	$00342e32

	org	y:

	.def	FRES
	.val	FRES
	.scl	2
	.type	$7
	.endef
FRES		bsc	2

	org	y:

	.def	FSTEPSIZE
	.val	FSTEPSIZE
	.scl	2
	.type	$7
	.endef
FSTEPSIZE		bsc	2

	org	y:

	.def	FSTART_POS
	.val	FSTART_POS
	.scl	2
	.type	$7
	.endef
FSTART_POS		bsc	2

	org	y:

	.def	FEND_POS
	.val	FEND_POS
	.scl	2
	.type	$7
	.endef
FEND_POS		bsc	2

	org	y:

	.def	FAUTO_RETURN
	.val	FAUTO_RETURN
	.scl	2
	.type	$4
	.endef
FAUTO_RETURN		bsc	1

	org	y:

	.def	FAUTO_REVERSE
	.val	FAUTO_REVERSE
	.scl	2
	.type	$4
	.endef
FAUTO_REVERSE		bsc	1

	org	y:

	.def	FSPEED
	.val	FSPEED
	.scl	2
	.type	$7
	.endef
FSPEED		bsc	2

	org	y:

	.def	FSTEP_ACCELERATION
	.val	FSTEP_ACCELERATION
	.scl	2
	.type	$7
	.endef
FSTEP_ACCELERATION		bsc	2

	org	y:

	.def	FACCELERATION
	.val	FACCELERATION
	.scl	2
	.type	$7
	.endef
FACCELERATION		bsc	2

	org	y:

	.def	FLOW_LIMIT
	.val	FLOW_LIMIT
	.scl	2
	.type	$7
	.endef
FLOW_LIMIT		bsc	2

	org	y:

	.def	FHIGH_LIMIT
	.val	FHIGH_LIMIT
	.scl	2
	.type	$7
	.endef
FHIGH_LIMIT		bsc	2

	org	y:

	.def	FTRIGGER_ENABLED
	.val	FTRIGGER_ENABLED
	.scl	2
	.type	$4
	.endef
FTRIGGER_ENABLED		bsc	1

	org	y:

	.def	FTIMER_ENABLED
	.val	FTIMER_ENABLED
	.scl	2
	.type	$4
	.endef
FTIMER_ENABLED		bsc	1

	org	y:

	.def	FTIMER_PERIOD
	.val	FTIMER_PERIOD
	.scl	2
	.type	$7
	.endef
FTIMER_PERIOD		bsc	2

	org	y:

	.def	FLAST_LEVEL
	.val	FLAST_LEVEL
	.scl	2
	.type	$4
	.endef
FLAST_LEVEL		bsc	1

	org	y:

	.def	FTRIGGER_COUNT
	.val	FTRIGGER_COUNT
	.scl	2
	.type	$4
	.endef
FTRIGGER_COUNT		bsc	1

	org	y:

	.def	FSTEP_COUNT
	.val	FSTEP_COUNT
	.scl	2
	.type	$4
	.endef
FSTEP_COUNT		bsc	1

	org	y:

	.def	FTRIGGED_STEP
	.val	FTRIGGED_STEP
	.scl	2
	.type	$4
	.endef
FTRIGGED_STEP		bsc	1

	org	y:

	.def	FTRIGGERED_STEP
	.val	FTRIGGERED_STEP
	.scl	2
	.type	$7
	.endef
FTRIGGERED_STEP		bsc	2

	org	y:

	.def	FCURRENT_POS
	.val	FCURRENT_POS
	.scl	2
	.type	$7
	.endef
FCURRENT_POS		bsc	2

	org	y:

	.def	FLEVEL
	.val	FLEVEL
	.scl	2
	.type	$4
	.endef
FLEVEL		bsc	1

	org	y:

	.def	FBITS
	.val	FBITS
	.scl	2
	.type	$4
	.endef
FBITS		bsc	1

	org	y:

	.def	FHL
	.val	FHL
	.scl	2
	.type	$4
	.endef
FHL		bsc	1

	org	y:

	.def	FLL
	.val	FLL
	.scl	2
	.type	$4
	.endef
FLL		bsc	1

	org	y:

	.def	FMOVING
	.val	FMOVING
	.scl	2
	.type	$4
	.endef
FMOVING		bsc	1

	org	y:

	.def	FDO_STEP
	.val	FDO_STEP
	.scl	2
	.type	$7
	.endef
FDO_STEP		bsc	2

	org	y:

	.def	FT
	.val	FT
	.scl	2
	.type	$7
	.endef
FT		bsc	2

	org	y:

	.def	FHP
	.val	FHP
	.scl	2
	.type	$7
	.endef
FHP		bsc	2

	org	y:

	.def	FLP
	.val	FLP
	.scl	2
	.type	$7
	.endef
FLP		bsc	2


