' ------------------------------------------------ 
' --------------- PVT_250Hz_FastReturn.ab -----------------
' ------------------------------------------------ 
'
'
'velocity is ~150 mm/ms
'

DGLOBAL(3) = 1 'mode of operation
DGLOBAL(0) = 0 'time offset to synchronize
DGLOBAL(1) = 0 'counter for computing <PMCD(Z)>

'User input (Z_0, PumpA_step)
Z_0 = 12.945 'slot 0 position -> 12.95 on 12/14/14 when in use; 12.99 for a cold start
DZ = 0.610		'slot separation
Nslots = 41
PumpA_step = 45/24
DT = 0.024304558/6	'~250 Hz



DT = 0.999998412*DT 'oscillator correction
Z_mid = Z_0 - 0.5*(Nslots - 1)*DZ 'mid-point of the stroke
Z_N = Z_0 - (Nslots - 0.5)*DZ ' end-point of the stroke
Vn = -1*DZ/DT	'velocity of sample cell


'SETGAIN <Axis>, <GainKp>, <GainKi>, <GainKpos>, <GainAff>
'SETGAIN sets all 4 parameters synchronously
'SETGAIN Z, 1780000, 10000, 56.2, 56200 original settings
SETGAIN Z, 1780000, 10000, 56.2, 56200
SETPARM Z, GainVff, 0

DIM PrintString AS STRING(80)

'Initial setup for Z axis
IF AXISFAULT(Z) <> 0 THEN
    FAULTACK Z 'Make sure any fault state is cleared.
END IF
ENABLE Z
DIM homed AS INTEGER
homed = (AXISSTATUS(Z) >> 1) BAND 1
IF NOT homed THEN 'make sure axis is homeds
    HOME Z
END IF
MOVEABS Z Z_N 'Go to starting position
WAIT MOVEDONE Z

DOUT X,1,0:0 'Ensure digital output is low when starting

'Find current position of PumpA
PumpA_0 = PCMD(PumpA)

'Set up for PVT calls
ABS 'Positions specified in absolute coordinates
PVT INIT TIME ABS
HALT

WHILE DIN(X,1,0)=0 'wait for clk pulse 
	DWELL 0.00025 
WEND
DGLOBAL(1) = 0 'reset PLL counter
SCOPETRIG 'Requires 0.008 s to execute?

DWELL ((57-15/2)*DT - 0.009) 'DWELL time to phase the start of the Z motion

j = 0
PVT Z Z_N, 0 PumpA PumpA_0, 0 TIME 0.0001 DOUT X,1,0,1
WHILE DGLOBAL(3) > 0 'insert IF statements to select mode; mode 0 ends  motion
	PumpA_pos = PumpA_0 + j*PumpA_step
	T_0 = 15*DT + j*57*DT+DGLOBAL(0)'57 -> 4.33 Hz
	FOR i = -1 TO Nslots
		Zi = Z_0 - i*DZ
		Ti = T_0 + i*DT
		IF i = -1
			THEN
				PVT Z (Zi-DZ/2), 0 PumpA PumpA_pos, 0 TIME Ti DOUT X,1,0,1
		ELSEIF i = Nslots
			THEN
				PVT Z (Zi+DZ/2), 0 PumpA PumpA_pos, 0 TIME Ti DOUT X,1,1,1
				'IF j = 0 THEN
					'DGLOBAL(1) = 0 'reset PLL counter
				'END IF				
		ELSE
				PVT Z Zi, Vn PumpA PumpA_pos, 0 TIME Ti DOUT X,1,1,1
				
		END IF
	NEXT i

	'FORMAT PrintString, "%d,%.3f,%.3f,%.3f,%.3f\n",
	'INTV:j,DBLV:T_1,DBLV:T_2,DBLV:T_3,DBLV:T_4
	'PRINT PrintString
	'FORMAT PrintString, "%d,%.3f,%.3f,%.3f,%.3f\n",
	'INTV:j,DBLV:Z_1,DBLV:Z_2,DBLV:Z_3,DBLV:Z_4
	'PRINT PrintString

		
'correct phase every 64 repeats (if err > 5 um)

	IF (j<>0) AND (j/64 - FLOOR(j/64)) = 0
		THEN
			pos_err = DGLOBAL(2) - Z_mid - 0.4
			IF ABS(pos_err) > 0.003
				THEN 	'divide pos_err by Vmax -> 616 mm/s during back stroke
					DGLOBAL(0) = DGLOBAL(0) + pos_err/617
			END IF
			DGLOBAL(1) = 0
	FORMAT PrintString, "%d,%.3f,%.5f\r",
	INTV:j,DBLV:pos_err,DBLV:DGLOBAL(0)
	PRINT PrintString
	END IF

	'FORMAT PrintString, "%d\n", INTV:j
	'PRINT PrintString
	j=j+1
WEND
MOVEABS Z Z_0 'Go to first slot