
		; **** BCM file generated: Mon, Feb 18 2019, 05:53:58 PM ****

	.ver	200003

	org	p:

		chkdbg
	.ln		16
		pusha		FDT
		pushc_d		$0d5ff2ab $3f50af00
		store_d
		chkdbg
	.ln		17
		pusha		FMSSHUT_OPEN
		pushc_d		$00000000 $404c0000
		store_d
		chkdbg
	.ln		18
		pusha		FMSSHUT_STEP
		pushc_d		$00000000 $401c0000
		store_d
		chkdbg
	.ln		19
		pusha		FMSSHUT_CLOSE1
		pushv_d		FMSSHUT_OPEN
		pushv_d		FMSSHUT_STEP
		sub_d
		store_d
		chkdbg
	.ln		20
		pusha		FMSSHUT_CLOSE2
		pushv_d		FMSSHUT_OPEN
		pushv_d		FMSSHUT_STEP
		add_d
		store_d
		chkdbg
	.ln		22
		abs_cmd
		chkdbg
	.ln		23
		pushc_i		$00000001
		waitmode_cmd
		chkdbg
	.ln		24
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_CLOSE1
		store_d
		chkdbg
	.ln		25
		pushc_i		$00000006
		pushv_d		FMSSHUT_POS
		pushc_d		$00000000 $40c38800
		pushc_i		$00000002
		pushc_i		$00000001
		pushc_i		$00000002
		index_cmd
		chkdbg
	.ln		26
		pusha		FSLOPE
		pushc_i		$00000001
		store_i
		chkdbg
	.ln		30
		pushc_i		$000003e8
		scopebuffer_cmd
		chkdbg
	.ln		31
		pushc_i		$fffffffc
		scopetrigperiod_cmd
		chkdbg
	.ln		33
		scopetrig_cmd
		chkdbg
	.ln		33
		pushc_f		$3ccccccd
		dwell_cmd
		chkdbg
	.ln		34
		pushc_i		$00000000
		pushc_i		$00000001
		int_cmd
		chkdbg
	.ln		35
		pushc_i		$00000001
		pushc_i		$00000001
		int_cmd
		chkdbg
	.ln		37
		pushc_i		$00000000
		pushc_i		$00020004
		spline_cmd
		chkdbg
	.ln		38
		pushc_i		$00000001
		velocity_cmd
		chkdbg
	.ln		40
		halt_cmd
		chkdbg
	.ln		41
		pusha		FT_LOOP
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		42
		pusha		FN_OUTLIER
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		43
L2
		pushc_i		$00000000
		int_func
		pushc_i		$00000000
		tgt_i
		brcf		L3
		chkdbg
	.ln		44
		pusha		FN_LOOP
		pushc_d		$00000000 $00000000
		store_d
		chkdbg
	.ln		46
		pushc_i		$00000001
		startsync_cmd
		chkdbg
	.ln		47
		pusha		FVOLT0
		pushc_i		$00000006
		pushc_i		$00000000
		ain_cmd
		cnvt_fd
		store_d
		chkdbg
	.ln		48
		pusha		FVOLT1
		pushv_d		FVOLT0
		store_d
		chkdbg
	.ln		49
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000004
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		50
L4
		pushv_d		FVOLT1
		pushc_d		$9999999a $3fe19999
		tlt_d
		pushv_d		FVOLT1
		pushc_d		$00000000 $40060000
		tgt_d
		tor_d
		cnvt_di
		brcf		L5
		chkdbg
	.ln		51
		sync_cmd
		chkdbg
	.ln		52
		pusha		FVOLT1
		pushc_i		$00000006
		pushc_i		$00000000
		ain_cmd
		cnvt_fd
		store_d
		chkdbg
	.ln		53
		pusha		FN_LOOP
		pushv_d		FN_LOOP
		pushc_d		$00000000 $3ff00000
		add_d
		store_d
		bra		L4
L5
		chkdbg
	.ln		55
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000003
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		56
		pusha		FN_LOOP_LATCH
		pushv_d		FN_LOOP
		cnvt_di
		store_i
		chkdbg
	.ln		57
		halt_cmd
		chkdbg
	.ln		59
		sync_cmd
		chkdbg
	.ln		60
		sync_cmd
		chkdbg
	.ln		61
		sync_cmd
		chkdbg
	.ln		62
		pusha		FVOLT2
		pushc_i		$00000006
		pushc_i		$00000000
		ain_cmd
		cnvt_fd
		store_d
		chkdbg
	.ln		63
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000002
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		65
		pushv_d		FVOLT0
		pushc_d		$9999999a $3ff99999
		tlt_d
		pushv_d		FVOLT2
		pushc_d		$9999999a $3ff99999
		tlt_d
		tand_d
		cnvt_di
		brcf		L7
		chkdbg
	.ln		66
		pusha		FT_OFFSET
		pushc_d		$566cf41f $3fa6ae7d
		pushv_d		FVOLT1
		pushc_d		$00000000 $40080000
		pwr_d
		mpy_d
		pushc_d		$66666667 $3fc66666
		pushv_d		FVOLT1
		pushc_d		$00000000 $40000000
		pwr_d
		mpy_d
		sub_d
		pushc_d		$566cf41f $3fe4ae7d
		pushv_d		FVOLT1
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		69
		pushv_i		FSLOPE
		pushc_i		$00000001
		teq_i
		brcf		L9
		chkdbg
	.ln		70
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_CLOSE2
		store_d
		chkdbg
	.ln		71
		pusha		FSLOPE
		pushc_i		$ffffffff
		store_i
		bra		L8
L9
		chkdbg
	.ln		73
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_CLOSE1
		store_d
		chkdbg
	.ln		74
		pusha		FSLOPE
		pushc_i		$00000001
		store_i
L8
		chkdbg
	.ln		76
		pusha		FMIDPOINT
		pushv_d		FMSSHUT_OPEN
		store_d
		chkdbg
	.ln		77
		pusha		FTI
		pushc_d		$00000000 $40280000
		pushv_d		FDT
		mpy_d
		pushc_d		$00000000 $40000000
		pushv_d		FT_OFFSET
		mpy_d
		pushc_d		$00000000 $408f4000
		div_d
		sub_d
		store_d
		chkdbg
	.ln		78
		pusha		FN_DELAY
		pushc_i		$00000007
		store_i
		chkdbg
	.ln		79
		sync_cmd
		bra		L6
L7
		chkdbg
	.ln		81
		pushv_d		FVOLT0
		pushc_d		$9999999a $3ff99999
		tlt_d
		pushv_d		FVOLT2
		pushc_d		$9999999a $3ff99999
		tgt_d
		tand_d
		cnvt_di
		brcf		L10
		chkdbg
	.ln		82
		pusha		FT_OFFSET
		pushc_d		$0d844d02 $3fa4af4f
		pushv_d		FVOLT1
		pushc_d		$00000000 $40080000
		pwr_d
		mpy_d
		pushc_d		$9e59f2bb $3fc37707
		pushv_d		FVOLT1
		pushc_d		$00000000 $40000000
		pwr_d
		mpy_d
		sub_d
		pushc_d		$06cca2db $3fe36499
		pushv_d		FVOLT1
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		85
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_OPEN
		store_d
		chkdbg
	.ln		86
		pushv_i		FSLOPE
		pushc_i		$00000001
		teq_i
		brcf		L12
		chkdbg
	.ln		87
		pusha		FMIDPOINT
		pushv_d		FMSSHUT_OPEN
		pushc_d		$00000000 $3fe00000
		pushv_d		FMSSHUT_STEP
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		88
		pusha		FSLOPE
		pushc_i		$ffffffff
		store_i
		bra		L11
L12
		chkdbg
	.ln		90
		pusha		FMIDPOINT
		pushv_d		FMSSHUT_OPEN
		pushc_d		$00000000 $3fe00000
		pushv_d		FMSSHUT_STEP
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		91
		pusha		FSLOPE
		pushc_i		$00000001
		store_i
L11
		chkdbg
	.ln		93
		pusha		FN_DELAY
		pushc_i		$00000005
		store_i
		chkdbg
	.ln		94
		pusha		FTI
		pushc_d		$00000000 $40200000
		pushv_d		FDT
		mpy_d
		pushc_d		$00000000 $40000000
		pushv_d		FT_OFFSET
		mpy_d
		pushc_d		$00000000 $408f4000
		div_d
		sub_d
		store_d
		chkdbg
	.ln		95
		sync_cmd
		bra		L6
L10
		chkdbg
	.ln		97
		pusha		FT_OFFSET
		pushc_d		$fb549f95 $bfa63c74
		pushv_d		FVOLT1
		pushc_d		$00000000 $40080000
		pwr_d
		mpy_d
		pushc_d		$ea209aab $3fd1003e
		pushv_d		FVOLT1
		pushc_d		$00000000 $40000000
		pwr_d
		mpy_d
		add_d
		pushc_d		$9320d995 $3fee9c8c
		pushv_d		FVOLT1
		mpy_d
		sub_d
		pushc_d		$50c5eb30 $3fff344e
		add_d
		store_d
		chkdbg
	.ln		101
		pushv_i		FSLOPE
		pushc_i		$00000001
		teq_i
		brcf		L14
		chkdbg
	.ln		102
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_CLOSE2
		store_d
		chkdbg
	.ln		103
		pusha		FMIDPOINT
		pushv_d		FMSSHUT_OPEN
		pushc_d		$00000000 $3fe00000
		pushv_d		FMSSHUT_STEP
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		104
		pusha		FSLOPE
		pushc_i		$ffffffff
		store_i
		bra		L13
L14
		chkdbg
	.ln		106
		pusha		FMSSHUT_POS
		pushv_d		FMSSHUT_CLOSE1
		store_d
		chkdbg
	.ln		107
		pusha		FMIDPOINT
		pushv_d		FMSSHUT_OPEN
		pushc_d		$00000000 $3fe00000
		pushv_d		FMSSHUT_STEP
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		108
		pusha		FSLOPE
		pushc_i		$00000001
		store_i
L13
		chkdbg
	.ln		110
		pusha		FN_DELAY
		pushc_i		$00000005
		store_i
		chkdbg
	.ln		111
		pusha		FTI
		pushc_d		$00000000 $40200000
		pushv_d		FDT
		mpy_d
		pushc_d		$00000000 $40000000
		pushv_d		FT_OFFSET
		mpy_d
		pushc_d		$00000000 $408f4000
		div_d
		sub_d
		store_d
		chkdbg
	.ln		112
		sync_cmd
		chkdbg
	.ln		113
		sync_cmd
		chkdbg
	.ln		114
		sync_cmd
		chkdbg
	.ln		115
		sync_cmd
		chkdbg
	.ln		116
		sync_cmd
L6
		chkdbg
	.ln		119
		pushc_i		$00000006
		pushv_d		FMSSHUT_POS
		pushc_d		$00000000 $00000000
		pushv_d		FTI
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000001
		pushc_i		$00030101
		spline_cmd
		chkdbg
	.ln		120
		start_cmd
		chkdbg
	.ln		121
		pushc_i		$00000006
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000001
		dout_cmd
		chkdbg
	.ln		123
		pusha		FJ
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit0
		pushv_i		FN_DELAY
		cnvt_id
		store_d
		pusha		_ForNextStep0
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L17
L15
		pushv_d		FJ
		pushv_d		_ForNextLimit0
		pushv_d		_ForNextStep0
		tfor_d
		brcf		L16
L17
		chkdbg
	.ln		123
		sync_cmd
		pusha		FJ
		pushv_d		FJ
		pushv_d		_ForNextStep0
		add_d
		store_d
		bra		L15
L16
		chkdbg
	.ln		124
		pusha		FVCMD_MSSHUT_EXT
		pushc_i		$00000006
		vcmd_cmd
		pushc_d		$00000000 $408f4000
		div_d
		store_d
		chkdbg
	.ln		125
		pusha		FPCMD_MSSHUT_EXT
		pushc_i		$00000006
		pcmd_cmd
		pushv_d		FMIDPOINT
		sub_d
		pushv_d		FVCMD_MSSHUT_EXT
		pushv_d		FT_OFFSET
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		127
		pushc_i		$00000001
		int_func
		pushc_i		$00000001
		teq_i
		brcf		L19
		chkdbg
	.ln		128
		pusha		FV1_MAX
		pushc_d		$00000000 $00000000
		store_d
		chkdbg
	.ln		129
		pusha		FV2_MAX
		pushc_d		$00000000 $00000000
		store_d
		chkdbg
	.ln		130
		pusha		FN_LOOP_MIN
		pushc_d		$00000000 $40590000
		store_d
		chkdbg
	.ln		131
		pusha		FT_LOOP
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		132
		pusha		FN_OUTLIER
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		133
		pushc_i		$00000001
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		134
		dclspc		$00000000
		callp		FPRINT_LOG
		bra		L18
L19
		chkdbg
	.ln		136
		pushv_i		FN_LOOP_LATCH
		pushv_d		FN_LOOP_MIN
		cnvt_di
		tlt_i
		brcf		L21
		chkdbg
	.ln		137
		pusha		FN_LOOP_MIN
		pushv_i		FN_LOOP_LATCH
		cnvt_id
		store_d
L21
		chkdbg
	.ln		139
		pushv_d		FVOLT1
		pushv_d		FV1_MAX
		tgt_d
		cnvt_di
		brcf		L23
		chkdbg
	.ln		140
		pusha		FV1_MAX
		pushv_d		FVOLT1
		store_d
L23
		chkdbg
	.ln		142
		pushv_d		FVOLT2
		pushv_d		FV2_MAX
		tgt_d
		cnvt_di
		brcf		L25
		chkdbg
	.ln		143
		pusha		FV2_MAX
		pushv_d		FVOLT2
		store_d
L25
		chkdbg
	.ln		145
		pushv_d		FPCMD_MSSHUT_EXT
		pushc_d		$00000000 $bfe00000
		tlt_d
		pushv_d		FPCMD_MSSHUT_EXT
		pushc_d		$00000000 $3fe00000
		tgt_d
		tor_d
		cnvt_di
		brcf		L27
		chkdbg
	.ln		146
		pusha		FN_OUTLIER
		pushv_i		FN_OUTLIER
		pushc_i		$00000001
		add_i
		store_i
		chkdbg
	.ln		147
		dclspc		$00000000
		callp		FPRINT_LOG
L27
L18
		chkdbg
	.ln		151
		pusha		FT_LOOP
		pushv_i		FT_LOOP
		pushc_i		$00000001
		add_i
		store_i
		bra		L2
L3

		chkdbg
	.ln		-1
		end

	.file		0,\\femto\c\all projects\aps\instrumentation\software\lauecollect\ensemble\msshut_pvt_test2.ab
	.def	FPRINT_LOG
	.val	FPRINT_LOG
	.scl	2
	.type	$21
	.endef
FPRINT_LOG
	.bf		156
	.bb		156
		rcrdfp
		chkdbg
	.ln		156
		pushc_i		$00000019
		pusha		FPRINTSTRING
		pshrgpa
		pushc_i		$00000007
		pshgpa		_LC0
		pushv_i		FN_OUTLIER
		pushc_i		$00000000
		pushv_i		FT_LOOP
		pushc_i		$00000000
		pushv_i		FN_LOOP_LATCH
		pushc_i		$00000000
		pushv_d		FVOLT1
		pushc_i		$00000002
		pushv_d		FVOLT2
		pushc_i		$00000002
		pushv_d		FPCMD_MSSHUT_EXT
		pushc_i		$00000002
		pushc_i		$00000006
		format_emb
		chkdbg
	.ln		163
		pushv_i		FT_LOOP
		pushc_i		$00000000
		teq_i
		brcf		L1
		chkdbg
	.ln		164
		pushc_i		$00000019
		pusha		FPRINTSTRING
		pshrgpa
		pushc_i		$00000010
		pshgpa		_LC1
		imstore_s
		chkdbg
	.ln		165
		pushc_i		$00000019
		pusha		FPRINTSTRING
		pshrgpa
		print_cmd
		bra		L0
L1
		chkdbg
	.ln		167
		pushc_i		$00000019
		pusha		FPRINTSTRING
		pshrgpa
		print_cmd
L0
	.eb		169
	.ef		169
		rtn		$00000000		$00000000
	.def	*
	.val	0
	.scl	-1
	.type	$0
	.endef


	org	y:

	.def	FPRINTSTRING
	.val	FPRINTSTRING
	.scl	2
	.dim	25
	.strt	0
	.size	25
	.type	$3c
	.endef
FPRINTSTRING		bsc	25

	org	y:

	.def	FT_LOOP
	.val	FT_LOOP
	.scl	2
	.type	$4
	.endef
FT_LOOP		bsc	1

	org	y:

	.def	FN_DELAY
	.val	FN_DELAY
	.scl	2
	.type	$4
	.endef
FN_DELAY		bsc	1

	org	y:

	.def	FN_OUTLIER
	.val	FN_OUTLIER
	.scl	2
	.type	$4
	.endef
FN_OUTLIER		bsc	1

	org	y:

	.def	FN_LOOP_LATCH
	.val	FN_LOOP_LATCH
	.scl	2
	.type	$4
	.endef
FN_LOOP_LATCH		bsc	1

	org	y:

	.def	FPCMD_MSSHUT_EXT
	.val	FPCMD_MSSHUT_EXT
	.scl	2
	.type	$7
	.endef
FPCMD_MSSHUT_EXT		bsc	2

	org	y:

	.def	FT0
	.val	FT0
	.scl	2
	.type	$7
	.endef
FT0		bsc	2

	org	y:

	.def	FVOLT0
	.val	FVOLT0
	.scl	2
	.type	$7
	.endef
FVOLT0		bsc	2

	org	y:

	.def	FVOLT1
	.val	FVOLT1
	.scl	2
	.type	$7
	.endef
FVOLT1		bsc	2

	org	y:

	.def	FVOLT2
	.val	FVOLT2
	.scl	2
	.type	$7
	.endef
FVOLT2		bsc	2

	org	y:

	.def	FSLOPE
	.val	FSLOPE
	.scl	2
	.type	$4
	.endef
FSLOPE		bsc	1

	org	y:

	.def	FDT
	.val	FDT
	.scl	2
	.type	$7
	.endef
FDT		bsc	2

	org	y:

	.def	FMSSHUT_OPEN
	.val	FMSSHUT_OPEN
	.scl	2
	.type	$7
	.endef
FMSSHUT_OPEN		bsc	2

	org	y:

	.def	FMSSHUT_STEP
	.val	FMSSHUT_STEP
	.scl	2
	.type	$7
	.endef
FMSSHUT_STEP		bsc	2

	org	y:

	.def	FMSSHUT_CLOSE1
	.val	FMSSHUT_CLOSE1
	.scl	2
	.type	$7
	.endef
FMSSHUT_CLOSE1		bsc	2

	org	y:

	.def	FMSSHUT_CLOSE2
	.val	FMSSHUT_CLOSE2
	.scl	2
	.type	$7
	.endef
FMSSHUT_CLOSE2		bsc	2

	org	y:

	.def	FMSSHUT_POS
	.val	FMSSHUT_POS
	.scl	2
	.type	$7
	.endef
FMSSHUT_POS		bsc	2

	org	y:

	.def	FN_LOOP
	.val	FN_LOOP
	.scl	2
	.type	$7
	.endef
FN_LOOP		bsc	2

	org	y:

	.def	FT_OFFSET
	.val	FT_OFFSET
	.scl	2
	.type	$7
	.endef
FT_OFFSET		bsc	2

	org	y:

	.def	FMIDPOINT
	.val	FMIDPOINT
	.scl	2
	.type	$7
	.endef
FMIDPOINT		bsc	2

	org	y:

	.def	FTI
	.val	FTI
	.scl	2
	.type	$7
	.endef
FTI		bsc	2

	org	y:

	.def	FJ
	.val	FJ
	.scl	2
	.type	$7
	.endef
FJ		bsc	2

	org	y:

	.def	FVCMD_MSSHUT_EXT
	.val	FVCMD_MSSHUT_EXT
	.scl	2
	.type	$7
	.endef
FVCMD_MSSHUT_EXT		bsc	2

	org	y:

	.def	FV1_MAX
	.val	FV1_MAX
	.scl	2
	.type	$7
	.endef
FV1_MAX		bsc	2

	org	y:

	.def	FV2_MAX
	.val	FV2_MAX
	.scl	2
	.type	$7
	.endef
FV2_MAX		bsc	2

	org	y:

	.def	FN_LOOP_MIN
	.val	FN_LOOP_MIN
	.scl	2
	.type	$7
	.endef
FN_LOOP_MIN		bsc	2

	org	y:
_LC0
	dc	$252c6425, $64252c64, $332e252c, $2e252c66, $252c6633, $0d66332e, $00000000

	org	y:
_LC1
	dc	$756f5f4e, $65696c74, $54202c72, $6f6f6c5f, $4e202c70, $6f6f6c5f, $616c5f70, $2c686374, $6c6f5620, $202c3174
	dc	$746c6f56, $50202c32, $5f444d43, $6853736d, $655f7475, $000d7478


	org	y:

	.def	_ForNextLimit0
	.val	_ForNextLimit0
	.scl	20
	.type	$7
	.endef
_ForNextLimit0		bsc	2

	org	y:

	.def	_ForNextStep0
	.val	_ForNextStep0
	.scl	20
	.type	$7
	.endef
_ForNextStep0		bsc	2

