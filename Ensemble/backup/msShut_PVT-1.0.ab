PROGRAM
	DIM E_index AS INTEGER
	DIM DT_array(2) AS DOUBLE	
	DIM scale_factor_array(2) AS DOUBLE 
	DIM msShut_open_array(2) AS DOUBLE 
	DIM msShut_step_array(2) AS DOUBLE
	DIM Ti AS DOUBLE
	DIM N_count as INTEGER
	DIM N_loop as INTEGER
	DIM N_PVT as INTEGER
	DIM PrintString AS STRING(96) 'max # characters for PRINT is 96	

	
	'Write program name in UserString0 (identifies program loaded)
	SETPARM UserString0,"msShut_PVT.ab"

	scale_factor = 1.0000054
	DT = scale_factor*0.024304558/24
		'Read E_index(Environment index): (0: NIH; 1: APS; 2: LCLS)
	E_index = GETPARM(UserInteger0)
	
	'Initialize IGLOBAL Interactive Control Parameters
	IGLOBAL(0) = 1 '1: program is running; 0: terminates program
	IGLOBAL(1) = 1 '1 triggers digital oscilloscope one time

	
	'Set up scope parameters
	'SCOPEBUFFER 5000
	'SCOPETRIGPERIOD 1	' -4 (-2) corresponds to 4 (2) kHz
	
	'Specify DT array 
	DT_array(0) = (351.934/350.0)*0.024304558/24	'0: NIH base period  (0.0010183 based on internal oscillator for Pico23)							
	DT_array(1) = 0.024304558/24					'1: APS base period  (0.0010127 275th subharmonic of P0)
	DT_array(2) = 1.0/960							'2: LCLS base period (0.0010417 inverse of 8*120 = 960 Hz)
	scale_factor_array(0) = 1.0000054 '1.00000184 'Pico23 
	scale_factor_array(1) = 0.9999902 'APS 2017.02.26; 0.99999084 APS 2016.11.08; 0.99999525 'APS 03/07/2016
	scale_factor_array(2) = 1.0000000 'LCLS
	
	'Millisecond shutter open parameters (0:NIH, 1:APS, 2:LCLS)
	msShut_open_array(0) = 56.0
	msShut_open_array(1) =  9.7
	msShut_open_array(2) = 56.0
	
	'Millisecond shutter step size (0:NIH, 1:APS, 2:LCLS; open to close in degrees)
	msShut_step_array(0) =  7.0
	msShut_step_array(1) = 10.0
	msShut_step_array(2) =  7.0
	
	'Select Environment-dependent parameters
	scale_factor = scale_factor_array(E_index)
	IF DGLOBAL(0) > 0.9999 AND DGLOBAL(0) < 1.0001 THEN
		scale_factor = DGLOBAL(0) ' reuse recent value
	ELSE
		DGLOBAL(0) = scale_factor
	END IF
	DT_start = DT_array(E_index)
	DT = DT_start*scale_factor
	msShut_open = msShut_open_array(E_index)
	msShut_step = msShut_step_array(E_index)
	msShut_atten = 56	'NIH/LCLS attenuated position (in degrees)
	msShut_close1 = msShut_open - msShut_step
	msShut_close2 = msShut_open + msShut_step
	
	
	PLANE 1
	'check for "Motion Active" before executing RECONCILE
	WHILE (PLANESTATUS(0) BAND 1<<0) <> 0 OR (PLANESTATUS(1) BAND 1<<0) <> 0 
		P_status = PLANESTATUS(1)
		DWELL 0.005
	WEND
	RECONCILE msShut_ext
	ABS 'Positions specified in absolute coordinates
	WAIT MODE MOVEDONE
	msShut_pos = msShut_close1
	MOVEABS msShut_ext msShut_pos F10000
	PVT INIT TIME ABS
	VELOCITY ON
	HALT
	
	N_count = 0
	STARTSYNC -1	'set SYNCH interval to 0.5 ms
	'Ensure input is 0 before starting.
	WHILE DIN(X,1,1)=1
		SYNC
	WEND
	WHILE IGLOBAL(0) > 0  'enter IGLOBAL(0) = 0 to exit loop
		SYNC
		N_loop = 0
		N_PVT = 0
		'wait for next low-to-high transition.
		WHILE DIN(X,1,1)=0
			IF N_count > 0 THEN
				Ttemp= 0.001*TIMER()
				IF Ttemp > (Ti-0.002) THEN
					IF (N_loop BAND 3) = 3 THEN
						N_PVT = N_PVT+1
						PVT msShut_ext msShut_pos,0 TIME Ttemp+0.002
					END IF
					N_loop = N_loop + 1
				END IF
				
			END IF
			SYNC
		WEND
		AIN_Volt = AIN(X,1)
		IF N_count = 0 THEN CLEARTIMER END IF
		Ttrig = 0.001*TIMER()
		
		'calculate time offset from AIN
		Ti_offset =  (0.02624*AIN_Volt^3
					- 0.11626*AIN_Volt^2
					+ 0.37006*AIN_Volt
					- 0.53064)/470.0
		
		SYNC '0.5 ms after trigger
		
		'Acquire scope trace when IGLOBAL(1)=1
		IF IGLOBAL(1) = 1 THEN
			SCOPETRIG
			IGLOBAL(1) = 0
		END IF
		'Determine next msShut positions for modes 0 and 1
		IF msShut_pos > msShut_close1 THEN
			msShut_pos0 = msShut_close1
			msShut_pos1 = msShut_close1
		ELSE
			msShut_pos0 = msShut_close2
			msShut_pos1 = msShut_open
		END IF
		
		SYNC '1.0 ms after trigger
		
		'Queue PVT commands for START time and for offset time 
		Ti = Ttrig + 0.002
		PVT msShut_ext msShut_pos,0 TIME Ti
		Ti = Ti + 0.001 - Ti_offset
		PVT msShut_ext msShut_pos,0 TIME Ti
		
		SYNC '1.5 ms after trigger
		
		'Determine mode of operation and queue next PVT command
		shut_mode = DIN(X,1,1)
		shut_mode = 0
		IF shut_mode = 0 THEN
			Ti = Ti + 12*DT
			PVT msShut_ext msShut_pos0,0 TIME Ti
			msShut_pos = msShut_pos0
		ELSE
			Ti = Ti + 6*DT
			PVT msShut_ext msShut_pos1,0 TIME Ti
			msShut_pos = msShut_pos1
		END IF
		
		SYNC '2.0 ms after trigger
		
		'Start executing PVT commands 2.0 ms after trigger
		START
		'IF N_count = 0 THEN START END IF

		'Print output
		FORMAT PrintString, "%.4f,%.1f,%.0f\r",DBLV:Ttrig,DBLV:1000*Ti_offset,DBLV:msShut_pos
		PRINT PrintString
		WHILE DIN(X,1,1)=1
			SYNC
		WEND
		'FOR j = 1 TO 15 SYNC NEXT j '9.5 ms after trigger
		'HALT
		N_count = N_count + 1

	WEND
END PROGRAM