
		; **** BCM file generated: Wed, Mar 28 2018, 10:11:59 AM ****

	.ver	200003

	org	p:

		chkdbg
	.ln		25
		pushc_i		$00000004
		pushc_i		$00000001
		int_cmd
		chkdbg
	.ln		26
		pusha		FDZ
		pushc_d		$00000000 $bfe00000
		store_d
		chkdbg
	.ln		27
		pusha		FN_STEPS
		pushc_d		$00000000 $40470000
		store_d
		chkdbg
	.ln		28
		pusha		FZ_STOP
		pushc_d		$00000000 $c0250000
		store_d
		chkdbg
	.ln		29
		pusha		FZ_START
		pushv_d		FZ_STOP
		pushv_d		FDZ
		pushv_d		FN_STEPS
		mpy_d
		sub_d
		store_d
		chkdbg
	.ln		30
		pusha		FN_RETURN
		pushc_d		$00000000 $40520000
		store_d
		chkdbg
	.ln		31
		pusha		FDT
		pushc_d		$21a24e93 $3ff016a2
		pushc_d		$4703d328 $3f98e34b
		mpy_d
		pushc_d		$00000000 $40380000
		div_d
		store_d
		chkdbg
	.ln		32
		pusha		FZ_MID
		pushc_d		$00000000 $3fe00000
		pushv_d		FZ_START
		pushv_d		FZ_STOP
		add_d
		mpy_d
		store_d
		chkdbg
	.ln		33
		pusha		FZVMAX_RS
		pushc_d		$00000000 $3ff80000
		pushv_d		FZ_START
		pushv_d		FZ_STOP
		sub_d
		mpy_d
		pushv_d		FN_RETURN
		pushv_d		FDT
		mpy_d
		div_d
		store_d
		chkdbg
	.ln		34
		pusha		FZI
		pushv_d		FZ_START
		store_d
		chkdbg
	.ln		35
		pusha		FTI
		pushc_d		$d2f1a9fc $3f50624d
		store_d
		chkdbg
	.ln		36
		pusha		FN_COUNT
		pushc_i		$00000000
		store_i
		chkdbg
	.ln		38
		pushc_i		$00000001
		plane_cmd
		chkdbg
	.ln		39
		pushc_i		$00000002
		pushc_i		$00000001
		reconcile_cmd
		chkdbg
	.ln		40
		abs_cmd
		chkdbg
	.ln		41
		pushc_i		$00000001
		waitmode_cmd
		chkdbg
	.ln		42
		pushc_i		$00000002
		pushv_d		FZI
		pushc_d		$00000000 $40240000
		pushc_i		$00000000
		pushc_i		$00000002
		pushc_i		$00000001
		linear_cmd
		chkdbg
	.ln		43
		pushc_i		$00000001
		pushc_i		$00020004
		spline_cmd
		chkdbg
	.ln		44
		pushc_i		$00000001
		velocity_cmd
		chkdbg
	.ln		45
		halt_cmd
		chkdbg
	.ln		46
		pushc_i		$00000002
		pushv_d		FZI
		pushc_d		$00000000 $00000000
		pushv_d		FTI
		pushc_i		$00020101
		spline_cmd
		chkdbg
	.ln		48
		pushc_i		$00000000
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		49
		dclspc		$00000001
		callp		FSYNCH
		chkdbg
	.ln		57
L23
		pushc_i		$00000000
		int_func
		pushc_i		$ffffffff
		tgt_i
		brcf		L24
		chkdbg
	.ln		58
		dclspc		$00000001
		callp		FSYNCH
		chkdbg
	.ln		59
		pushc_i		$0000000c
		startsync_cmd
		chkdbg
	.ln		60
		pusha		FZI
		pushv_d		FZ_STOP
		store_d
		chkdbg
	.ln		61
		pusha		FTI
		pushv_d		FTI
		pushc_d		$00000000 $40680000
		pushv_d		FDT
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		62
		pushc_i		$00000002
		pushv_d		FZI
		pushc_d		$00000000 $00000000
		pushv_d		FTI
		pushc_i		$00020101
		spline_cmd
		chkdbg
	.ln		65
		pushv_i		FN_COUNT
		pushc_i		$00000000
		tgt_i
		brcf		L26
		chkdbg
	.ln		66
		pusha		FTI
		pushv_d		FTI
		pushc_d		$00000000 $3fe00000
		pushv_d		FZPOS
		pushv_d		FZ_MID
		sub_d
		mpy_d
		pushv_d		FZVMAX_RS
		div_d
		add_d
		store_d
L26
		chkdbg
	.ln		70
		pusha		FZI
		pushv_d		FZ_START
		store_d
		chkdbg
	.ln		71
		pusha		FTI
		pushv_d		FTI
		pushc_d		$00000000 $40520000
		pushv_d		FDT
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		72
		pushc_i		$00000002
		pushv_d		FZI
		pushc_d		$00000000 $00000000
		pushv_d		FTI
		pushc_i		$00020101
		spline_cmd
		chkdbg
	.ln		73
		pushv_i		FN_COUNT
		pushc_i		$00000000
		teq_i
		brcf		L28
		chkdbg
	.ln		74
		sync_cmd
		chkdbg
	.ln		75
		cleartimer_emb
		chkdbg
	.ln		76
		start_cmd
L28
		chkdbg
	.ln		78
		dclspc		$00000000
		callp		FPRINT_LOG
		chkdbg
	.ln		82
		pusha		FN_COUNT
		pushv_i		FN_COUNT
		pushc_i		$00000001
		add_i
		store_i
		bra		L23
L24
		chkdbg
	.ln		85
		pusha		FTI
		pushv_d		FTI
		pushc_d		$00000000 $408f4000
		pushv_d		FDT
		mpy_d
		add_d
		store_d
		chkdbg
	.ln		86
		pushc_i		$00000002
		pushc_d		$00000000 $00000000
		pushc_d		$00000000 $00000000
		pushv_d		FTI
		pushc_i		$00020101
		spline_cmd
		chkdbg
	.ln		88
		pushc_i		$00000000
		pushc_i		$00000000
		int_cmd
		chkdbg
	.ln		89
L29
		pushc_i		$00000000
		planestatus_cmd
		pushc_i		$00000001
		tband_i
		pushc_i		$00000000
		tne_i
		pushc_i		$00000001
		planestatus_cmd
		pushc_i		$00000001
		tband_i
		pushc_i		$00000000
		tne_i
		tor_i
		brcf		L30
		chkdbg
	.ln		90
		pusha		FP_STATUS
		pushc_i		$00000001
		planestatus_cmd
		cnvt_id
		store_d
		chkdbg
	.ln		91
		pushc_f		$3ba3d70a
		dwell_cmd
		bra		L29
L30
		chkdbg
	.ln		93
		pushc_i		$00000002
		pushc_i		$00000001
		reconcile_cmd

		chkdbg
	.ln		-1
		end

	.file		0,\\femto\c\all projects\aps\instrumentation\software\lauecollect\ensemble\synchtest.ab
	.def	FSYNCH
	.val	FSYNCH
	.scl	2
	.type	$21
	.endef
FSYNCH
	.bf		100
	.bb		100
	.def	FN_TEMP
	.val	-1
	.scl	1
	.type	$4
	.endef
		rcrdfp
		chkdbg
	.ln		100
		pushc_i		$ffffffff
		startsync_cmd
		chkdbg
	.ln		101
L0
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		pushc_i		$00000000
		teq_i
		brcf		L1
		chkdbg
	.ln		102
		sync_cmd
		bra		L0
L1
		chkdbg
	.ln		104
		pusha		FT_OFFSET
		pushc_i		$00000000
		pushc_i		$00000001
		ain_cmd
		cnvt_fd
		pushc_d		$51eb851e $40001eb8
		sub_d
		pushc_d		$a3d70a3c $3ffe3d70
		div_d
		store_d
		chkdbg
	.ln		107
		sync_cmd
		chkdbg
	.ln		108
		sync_cmd
		chkdbg
	.ln		110
		pusha		FT_CURRENT
		timer_emb
		store_d
		chkdbg
	.ln		113
		pusha		FJ
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit0INSYNCH
		pushc_d		$00000000 $40140000
		store_d
		pusha		_ForNextStep0INSYNCH
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L4
L2
		pushv_d		FJ
		pushv_d		_ForNextLimit0INSYNCH
		pushv_d		_ForNextStep0INSYNCH
		tfor_d
		brcf		L3
L4
		chkdbg
	.ln		113
		sync_cmd
		pusha		FJ
		pushv_d		FJ
		pushv_d		_ForNextStep0INSYNCH
		add_d
		store_d
		bra		L2
L3
		chkdbg
	.ln		114
		pusha		FMSSHUT_ENABLE
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		store_i
		chkdbg
	.ln		117
		pusha		FJ
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit1INSYNCH
		pushc_d		$00000000 $40140000
		store_d
		pusha		_ForNextStep1INSYNCH
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L7
L5
		pushv_d		FJ
		pushv_d		_ForNextLimit1INSYNCH
		pushv_d		_ForNextStep1INSYNCH
		tfor_d
		brcf		L6
L7
		chkdbg
	.ln		117
		sync_cmd
		pusha		FJ
		pushv_d		FJ
		pushv_d		_ForNextStep1INSYNCH
		add_d
		store_d
		bra		L5
L6
		chkdbg
	.ln		118
		pusha		FPUMPA_ENABLE
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		store_i
		chkdbg
	.ln		121
		pushfp
		pushc_i		$ffffffff
		add_i
		pushc_i		$00000000
		lstore_i
		chkdbg
	.ln		122
		pusha		FI
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit2INSYNCH
		pushc_d		$00000000 $40080000
		store_d
		pusha		_ForNextStep2INSYNCH
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L10
L8
		pushv_d		FI
		pushv_d		_ForNextLimit2INSYNCH
		pushv_d		_ForNextStep2INSYNCH
		tfor_d
		brcf		L9
L10
		chkdbg
	.ln		123
		pusha		FJ
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit3INSYNCH
		pushc_d		$00000000 $40140000
		store_d
		pusha		_ForNextStep3INSYNCH
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L13
L11
		pushv_d		FJ
		pushv_d		_ForNextLimit3INSYNCH
		pushv_d		_ForNextStep3INSYNCH
		tfor_d
		brcf		L12
L13
		chkdbg
	.ln		123
		sync_cmd
		pusha		FJ
		pushv_d		FJ
		pushv_d		_ForNextStep3INSYNCH
		add_d
		store_d
		bra		L11
L12
		chkdbg
	.ln		124
		pushfp
		pushc_i		$ffffffff
		add_i
		pushfp
		pushc_i		$ffffffff
		add_i
		lload_i
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		pushc_i		$00000002
		pushv_d		FI
		cnvt_di
		pwr_i
		mpy_i
		add_i
		lstore_i
		pusha		FI
		pushv_d		FI
		pushv_d		_ForNextStep2INSYNCH
		add_d
		store_d
		bra		L8
L9
		chkdbg
	.ln		126
		pusha		FN_MODE
		pushfp
		pushc_i		$ffffffff
		add_i
		lload_i
		store_i
		chkdbg
	.ln		129
		pusha		FZPOS
		pushc_i		$00000002
		pcmd_cmd
		pushv_d		FT_OFFSET
		pushv_d		FZVMAX_RS
		mpy_d
		pushc_d		$00000000 $408f4000
		div_d
		sub_d
		store_d
		chkdbg
	.ln		132
		pushfp
		pushc_i		$ffffffff
		add_i
		pushc_i		$00000000
		lstore_i
		chkdbg
	.ln		133
		pusha		FI
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit4INSYNCH
		pushc_d		$00000000 $40140000
		store_d
		pusha		_ForNextStep4INSYNCH
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L16
L14
		pushv_d		FI
		pushv_d		_ForNextLimit4INSYNCH
		pushv_d		_ForNextStep4INSYNCH
		tfor_d
		brcf		L15
L16
		chkdbg
	.ln		134
		pusha		FJ
		pushc_d		$00000000 $00000000
		store_d
		pusha		_ForNextLimit5INSYNCH
		pushc_d		$00000000 $40140000
		store_d
		pusha		_ForNextStep5INSYNCH
		pushc_d		$00000000 $3ff00000
		store_d
		bra		L19
L17
		pushv_d		FJ
		pushv_d		_ForNextLimit5INSYNCH
		pushv_d		_ForNextStep5INSYNCH
		tfor_d
		brcf		L18
L19
		chkdbg
	.ln		134
		sync_cmd
		pusha		FJ
		pushv_d		FJ
		pushv_d		_ForNextStep5INSYNCH
		add_d
		store_d
		bra		L17
L18
		chkdbg
	.ln		135
		pushfp
		pushc_i		$ffffffff
		add_i
		pushfp
		pushc_i		$ffffffff
		add_i
		lload_i
		pushc_i		$00000000
		pushc_i		$00000001
		pushc_i		$00000000
		pushc_i		$00000002
		din_cmd
		pushc_i		$00000002
		pushv_d		FI
		cnvt_di
		pwr_i
		mpy_i
		add_i
		lstore_i
		pusha		FI
		pushv_d		FI
		pushv_d		_ForNextStep4INSYNCH
		add_d
		store_d
		bra		L14
L15
		chkdbg
	.ln		137
		pusha		FN_DELAY
		pushfp
		pushc_i		$ffffffff
		add_i
		lload_i
		store_i
	.eb		139
	.ef		139
		rtn		$00000000		$00000001
	.def	*
	.val	0
	.scl	-1
	.type	$0
	.endef
	.def	FPRINT_LOG
	.val	FPRINT_LOG
	.scl	2
	.type	$21
	.endef
FPRINT_LOG
	.bf		142
	.bb		142
		rcrdfp
		chkdbg
	.ln		142
		pushv_i		FN_COUNT
		pushc_i		$00000000
		teq_i
		brcf		L21
		chkdbg
	.ln		143
		pushc_i		$00000014
		pshgpa		_LC0
		print_cmd
		chkdbg
	.ln		144
		cleartimer_emb
		bra		L20
L21
		chkdbg
	.ln		146
		pushv_i		FMSSHUT_ENABLE
		pushv_i		FMSSHUT_ENABLE_LAST
		tne_i
		pushv_i		FPUMPA_ENABLE
		pushv_i		FPUMPA_ENABLE_LAST
		tne_i
		tor_i
		pushv_i		FN_MODE
		pushv_i		FN_MODE_LAST
		tne_i
		tor_i
		pushv_i		FN_DELAY
		pushv_i		FN_DELAY_LAST
		tne_i
		tor_i
		pushv_d		FSCALE_FACTOR
		cnvt_di
		pushv_d		FSCALE_FACTOR_LAST
		cnvt_di
		tne_i
		tor_i
		pushc_i		$00000004
		int_func
		pushc_i		$00000001
		teq_i
		tor_i
		brcf		L22
		chkdbg
	.ln		152
		pushc_i		$0000001f
		pusha		FPRINTSTRING
		pshrgpa
		pushc_i		$00000007
		pshgpa		_LC1
		pushv_d		FT_CURRENT
		cnvt_di
		pushc_i		$00000000
		pushv_i		FMSSHUT_ENABLE
		pushc_i		$00000000
		pushv_i		FPUMPA_ENABLE
		pushc_i		$00000000
		pushv_i		FN_MODE
		pushc_i		$00000000
		pushv_i		FN_DELAY
		pushc_i		$00000000
		pushv_d		FT_OFFSET
		pushc_i		$00000002
		pushv_d		FZPOS
		pushc_i		$00000002
		pushc_i		$00000007
		format_emb
		chkdbg
	.ln		160
		pushc_i		$0000001f
		pusha		FPRINTSTRING
		pshrgpa
		print_cmd
		chkdbg
	.ln		161
		pusha		FMSSHUT_ENABLE_LAST
		pushv_i		FMSSHUT_ENABLE
		store_i
		chkdbg
	.ln		162
		pusha		FPUMPA_ENABLE_LAST
		pushv_i		FPUMPA_ENABLE
		store_i
		chkdbg
	.ln		163
		pusha		FN_MODE_LAST
		pushv_i		FN_MODE
		store_i
		chkdbg
	.ln		164
		pusha		FN_DELAY_LAST
		pushv_i		FN_DELAY
		store_i
		chkdbg
	.ln		165
		pusha		FSCALE_FACTOR_LAST
		pushv_d		FSCALE_FACTOR
		store_d
L22
L20
	.eb		167
	.ef		167
		rtn		$00000000		$00000000
	.def	*
	.val	0
	.scl	-1
	.type	$0
	.endef


	org	y:

	.def	FPRINTSTRING
	.val	FPRINTSTRING
	.scl	2
	.dim	31
	.strt	0
	.size	31
	.type	$3c
	.endef
FPRINTSTRING		bsc	31

	org	y:

	.def	FMSSHUT_ENABLE
	.val	FMSSHUT_ENABLE
	.scl	2
	.type	$4
	.endef
FMSSHUT_ENABLE		bsc	1

	org	y:

	.def	FPUMPA_ENABLE
	.val	FPUMPA_ENABLE
	.scl	2
	.type	$4
	.endef
FPUMPA_ENABLE		bsc	1

	org	y:

	.def	FN_MODE
	.val	FN_MODE
	.scl	2
	.type	$4
	.endef
FN_MODE		bsc	1

	org	y:

	.def	FN_DELAY
	.val	FN_DELAY
	.scl	2
	.type	$4
	.endef
FN_DELAY		bsc	1

	org	y:

	.def	FSCALE_FACTOR
	.val	FSCALE_FACTOR
	.scl	2
	.type	$7
	.endef
FSCALE_FACTOR		bsc	2

	org	y:

	.def	FMSSHUT_ENABLE_LAST
	.val	FMSSHUT_ENABLE_LAST
	.scl	2
	.type	$4
	.endef
FMSSHUT_ENABLE_LAST		bsc	1

	org	y:

	.def	FPUMPA_ENABLE_LAST
	.val	FPUMPA_ENABLE_LAST
	.scl	2
	.type	$4
	.endef
FPUMPA_ENABLE_LAST		bsc	1

	org	y:

	.def	FN_MODE_LAST
	.val	FN_MODE_LAST
	.scl	2
	.type	$4
	.endef
FN_MODE_LAST		bsc	1

	org	y:

	.def	FN_DELAY_LAST
	.val	FN_DELAY_LAST
	.scl	2
	.type	$4
	.endef
FN_DELAY_LAST		bsc	1

	org	y:

	.def	FSCALE_FACTOR_LAST
	.val	FSCALE_FACTOR_LAST
	.scl	2
	.type	$7
	.endef
FSCALE_FACTOR_LAST		bsc	2

	org	y:

	.def	FT_CORR
	.val	FT_CORR
	.scl	2
	.type	$7
	.endef
FT_CORR		bsc	2

	org	y:

	.def	FT_CORR_SUM
	.val	FT_CORR_SUM
	.scl	2
	.type	$7
	.endef
FT_CORR_SUM		bsc	2

	org	y:

	.def	FZ_ERROR_RANGE
	.val	FZ_ERROR_RANGE
	.scl	2
	.type	$4
	.endef
FZ_ERROR_RANGE		bsc	1

	org	y:

	.def	FDIN_ARRAY
	.val	FDIN_ARRAY
	.scl	2
	.dim	161
	.strt	0
	.size	161
	.type	$34
	.endef
FDIN_ARRAY		bsc	161

	org	y:

	.def	FT_OFFSET
	.val	FT_OFFSET
	.scl	2
	.type	$7
	.endef
FT_OFFSET		bsc	2

	org	y:

	.def	FN_COUNT
	.val	FN_COUNT
	.scl	2
	.type	$4
	.endef
FN_COUNT		bsc	1

	org	y:

	.def	FDT
	.val	FDT
	.scl	2
	.type	$7
	.endef
FDT		bsc	2

	org	y:

	.def	FZPOS
	.val	FZPOS
	.scl	2
	.type	$7
	.endef
FZPOS		bsc	2

	org	y:

	.def	FZVMAX_RS
	.val	FZVMAX_RS
	.scl	2
	.type	$7
	.endef
FZVMAX_RS		bsc	2

	org	y:

	.def	FT_CURRENT
	.val	FT_CURRENT
	.scl	2
	.type	$7
	.endef
FT_CURRENT		bsc	2

	org	y:

	.def	FJ
	.val	FJ
	.scl	2
	.type	$7
	.endef
FJ		bsc	2

	org	y:

	.def	FI
	.val	FI
	.scl	2
	.type	$7
	.endef
FI		bsc	2

	org	y:

	.def	FDZ
	.val	FDZ
	.scl	2
	.type	$7
	.endef
FDZ		bsc	2

	org	y:

	.def	FN_STEPS
	.val	FN_STEPS
	.scl	2
	.type	$7
	.endef
FN_STEPS		bsc	2

	org	y:

	.def	FZ_STOP
	.val	FZ_STOP
	.scl	2
	.type	$7
	.endef
FZ_STOP		bsc	2

	org	y:

	.def	FZ_START
	.val	FZ_START
	.scl	2
	.type	$7
	.endef
FZ_START		bsc	2

	org	y:

	.def	FN_RETURN
	.val	FN_RETURN
	.scl	2
	.type	$7
	.endef
FN_RETURN		bsc	2

	org	y:

	.def	FZ_MID
	.val	FZ_MID
	.scl	2
	.type	$7
	.endef
FZ_MID		bsc	2

	org	y:

	.def	FZI
	.val	FZI
	.scl	2
	.type	$7
	.endef
FZI		bsc	2

	org	y:

	.def	FTI
	.val	FTI
	.scl	2
	.type	$7
	.endef
FTI		bsc	2

	org	y:

	.def	FP_STATUS
	.val	FP_STATUS
	.scl	2
	.type	$7
	.endef
FP_STATUS		bsc	2

	org	y:
_LC0
	dc	$75635f54, $6e657272, $736d5b74, $6d202c5d, $75685373, $6e455f74, $656c6261, $7550202c, $5f41706d, $62616e45
	dc	$202c656c, $6f4d5f4e, $202c6564, $65445f4e, $2c79616c, $6f5f5420, $65736666, $5a202c74, $0d736f70, $00000000

	org	y:
_LC1
	dc	$252c6425, $64252c64, $2c64252c, $252c6425, $2c66332e, $66332e25, $0000000d


	org	y:

	.def	_ForNextLimit0INSYNCH
	.val	_ForNextLimit0INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextLimit0INSYNCH		bsc	2

	org	y:

	.def	_ForNextStep0INSYNCH
	.val	_ForNextStep0INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextStep0INSYNCH		bsc	2

	org	y:

	.def	_ForNextLimit1INSYNCH
	.val	_ForNextLimit1INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextLimit1INSYNCH		bsc	2

	org	y:

	.def	_ForNextStep1INSYNCH
	.val	_ForNextStep1INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextStep1INSYNCH		bsc	2

	org	y:

	.def	_ForNextLimit2INSYNCH
	.val	_ForNextLimit2INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextLimit2INSYNCH		bsc	2

	org	y:

	.def	_ForNextStep2INSYNCH
	.val	_ForNextStep2INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextStep2INSYNCH		bsc	2

	org	y:

	.def	_ForNextLimit3INSYNCH
	.val	_ForNextLimit3INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextLimit3INSYNCH		bsc	2

	org	y:

	.def	_ForNextStep3INSYNCH
	.val	_ForNextStep3INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextStep3INSYNCH		bsc	2

	org	y:

	.def	_ForNextLimit4INSYNCH
	.val	_ForNextLimit4INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextLimit4INSYNCH		bsc	2

	org	y:

	.def	_ForNextStep4INSYNCH
	.val	_ForNextStep4INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextStep4INSYNCH		bsc	2

	org	y:

	.def	_ForNextLimit5INSYNCH
	.val	_ForNextLimit5INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextLimit5INSYNCH		bsc	2

	org	y:

	.def	_ForNextStep5INSYNCH
	.val	_ForNextStep5INSYNCH
	.scl	20
	.type	$7
	.endef
_ForNextStep5INSYNCH		bsc	2

